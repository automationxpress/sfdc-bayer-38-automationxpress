<?xml version="1.0" encoding="UTF-8"?>
<ExternalServiceRegistration xmlns="http://soap.sforce.com/2006/04/metadata">
    <description>The IMPACT systems API</description>
    <label>IMPACTv3</label>
    <namedCredentialReference>IMPACT_API</namedCredentialReference>
    <operations>
        <active>false</active>
        <name>createbayerpersonnel</name>
    </operations>
    <operations>
        <active>false</active>
        <name>createclinicalpersonnel</name>
    </operations>
    <operations>
        <active>false</active>
        <name>createclinicalpersonnelrecordonsite</name>
    </operations>
    <operations>
        <active>false</active>
        <name>createnewcentre</name>
    </operations>
    <operations>
        <active>false</active>
        <name>createnewstudysite</name>
    </operations>
    <operations>
        <active>false</active>
        <name>createpersonnelrecordonsite</name>
    </operations>
    <operations>
        <active>false</active>
        <name>createpersonnelrecordonstudy</name>
    </operations>
    <operations>
        <active>false</active>
        <name>createpersonnelrecordonstudycountry</name>
    </operations>
    <operations>
        <active>false</active>
        <name>deleteclinicalpersonnelrecord</name>
    </operations>
    <operations>
        <active>false</active>
        <name>deletepersonnelrecord</name>
    </operations>
    <operations>
        <active>false</active>
        <name>deletepersonnelrecordonstudy</name>
    </operations>
    <operations>
        <active>false</active>
        <name>deletepersonnelrecordonstudycountry</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getcountryevents</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getcountryperson</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getcountrypersonnel</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getmedicalunitservice</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getoccupation</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getpersonbyid</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getpersonnelbyemail</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getpersonnelbyid</name>
    </operations>
    <operations>
        <active>true</active>
        <name>getpersonoccupation</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getpersonoccupationstudycountry</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getpersonoccupationstudysite</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getpersonoccupaton</name>
    </operations>
    <operations>
        <active>true</active>
        <name>getpersons</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getrecruitmentplansbycountries</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getrecruitmentplansbycountriesandsite</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getrecruitmentplansbystudy</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getsitebycountrysiteid</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getsiteperson</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getsitepersonnel</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getsites</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getsitesbycountry</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getsitesbystudy</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getspecification</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getstudies</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getstudiesallpersonnel</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getstudycountries</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getstudycountrycode</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getstudyevents</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getstudyeventsbycountrysite</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getstudyinfo</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getstudylocation</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getstudyperson</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getstudypersonnel</name>
    </operations>
    <operations>
        <active>false</active>
        <name>returnallcentrepersonnel</name>
    </operations>
    <operations>
        <active>false</active>
        <name>returnbayerpersonnel</name>
    </operations>
    <operations>
        <active>false</active>
        <name>returnclinicalpersonnel</name>
    </operations>
    <operations>
        <active>false</active>
        <name>updatebayerpersonnel</name>
    </operations>
    <operations>
        <active>false</active>
        <name>updatecentre</name>
    </operations>
    <operations>
        <active>false</active>
        <name>updateclinicalpersonnel</name>
    </operations>
    <operations>
        <active>false</active>
        <name>updateclinicalpersonnelrecordonsite</name>
    </operations>
    <operations>
        <active>false</active>
        <name>updateethicalapprovallevel</name>
    </operations>
    <operations>
        <active>false</active>
        <name>updateethicalapprovalstudysite</name>
    </operations>
    <operations>
        <active>false</active>
        <name>updateeventdatesforstudy</name>
    </operations>
    <operations>
        <active>false</active>
        <name>updateeventdatesforstudycountry</name>
    </operations>
    <operations>
        <active>false</active>
        <name>updateeventdatesforstudysite</name>
    </operations>
    <operations>
        <active>false</active>
        <name>updatenewstudysite</name>
    </operations>
    <operations>
        <active>false</active>
        <name>updatepersonnelrecordonsite</name>
    </operations>
    <operations>
        <active>false</active>
        <name>updatepersonnelrecordonstudy</name>
    </operations>
    <operations>
        <active>false</active>
        <name>updatepersonnelrecordonstudycountry</name>
    </operations>
    <registrationProviderType>Custom</registrationProviderType>
    <schema>{
  &quot;openapi&quot;: &quot;3.0.1&quot;,
  &quot;info&quot;: {
    &quot;title&quot;: &quot;Impact Rest APIs&quot;,
    &quot;version&quot;: &quot;2.7&quot;,
    &quot;description&quot;: &quot;IMPACT APIs is a web-based REST APIs that provides resources in a format consumable by other systems. These web APIs can be consumed for the various IMPACT functions and operational data in the IMPACT systems, enforcing their usage policies, controlling access, nurturing the subscriber community, collecting and analyzing usage statistics, and reporting on performance.\n\nImpact is Bayer&apos;s main Clinical Trail Management System CTMS. Its main purpose is to plan and track clinical trials in Phases I, II, III and IV run by different business functions, as well as externally run and managed trials. IMPACT is a Parexel software (Perseprive MyTrials) with some additional customized modules and additional interfaces operated by TCS. The global system holds numerous entry screens to collect planning, status, and meta information on active substance, project/clinical plans, trials, countries, and trial units. In addition, it is connected to numerous interfaces to update information automatically if applicable\n\nThe Impact Rest APIs is being designed by Bayer as part of the &apos;Envision&apos; &amp; &apos;Gemstone&apos; program and developed &amp; operated by TCS.\n\n\n|Topic | Contact | Comments | |---|---|---| |Project Manager| [Oliver Held](mailto:oliver.held@bayer.com)|First contact if you plan to use the API in your project |System Owner| [Paul Leslie](mailto:paul.leslie@bayer.com)|Answers general questions regarding IMPACT |API Owner|[Konrad Nadobny](mailto:konrad.nadobny@bayer.com)|Answers general questions regarding the API design |Solution Architect| [Ilya Beketov](mailto:ilya.beketov@bayer.com)|Provides guidance on how to design your system and make best use of the API |Developer (API)|[Impact Support (TCS)](mailto:tcs_impact_support@bayer.com)|Develops and Operates the API&quot;,
    &quot;contact&quot;: {
      &quot;email&quot;: &quot;ilya.beketov@bayer.com&quot;
    },
    &quot;x-bayer-metadata&quot;: {
      &quot;beatId&quot;: 3001648,
      &quot;miraId&quot;: 0,
      &quot;informationClassification&quot;: &quot;INTERNAL&quot;
    }
  },
  &quot;servers&quot;: [
    {
      &quot;url&quot;: &quot;https://api.bayer.com/impact/v2.7/&quot;,
      &quot;description&quot;: &quot;External Service provided via API-Management Platfrom (Akana) for production environment internet access&quot;
    },
    {
      &quot;url&quot;: &quot;http://by0xb2.bayer.cnb:40054/services/v2.7/&quot;,
      &quot;description&quot;: &quot;Internal Service with mTLS/SSL , TAC server for production environment&quot;
    },
    {
      &quot;url&quot;: &quot;https://np.api.bayer.com/impact/v2.7/&quot;,
      &quot;description&quot;: &quot;External Service provided via API-Management NP-Platfrom (Akana) for Non-prod environment internet access&quot;
    },
    {
      &quot;url&quot;: &quot;http://by0xb0.bayer.cnb:40054/services/v2.7/&quot;,
      &quot;description&quot;: &quot;Internal Service without mTLS/SSL , TAC server for Non-prod environment&quot;
    }
  ],
  &quot;paths&quot;: {
    &quot;/studies&quot;: {
      &quot;get&quot;: {
        &quot;operationId&quot;: &quot;getStudies&quot;,
        &quot;description&quot;: &quot;Returns the collection of studies. Filter the study based on query (TRIAL_NO (Study ID), TRIAL_SHORT_DESC, TRIAL_ALIAS_CODE,ACTIVE_SUBSTANCE_CODE, BSP_PROJ_ID, CLINICAL_PLAN_NO ...)&quot;,
        &quot;tags&quot;: [
          &quot;Studies service&quot;
        ],
        &quot;parameters&quot;: [
          {
            &quot;name&quot;: &quot;q&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;required&quot;: false,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;string&quot;
            },
            &quot;example&quot;: &quot;&quot;,
            &quot;description&quot;: &quot;As a query line User can use one of the possible study details: TRIAL_NO (Study ID),  TRIAL_SHORT_DESC,  TRIAL_ALIAS_CODE, ACTIVE_SUBSTANCE_CODE, BSP_PROJ_ID,  CLINICAL_PLAN_NO.  API will return studies base on the fulltext  search in the mentioned fields&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/activeStudyParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/eventNoStudyParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/actualDateAfterParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/actualDateBeforeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/plannedDateAfterParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/plannedDateBeforeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/originalDateAfterParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/originalDateBeforeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/limitParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/offsetParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;List of the studies&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/Studies&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studies/{studyId}&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Returns the study object details based on Study ID&quot;,
        &quot;tags&quot;: [
          &quot;Studies service&quot;
        ],
        &quot;operationId&quot;: &quot;getStudyInfo&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Detailed list of the trial information must be returned&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/Study&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studies/{studyId}/events&quot;: {
      &quot;get&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Returns the collection of the events for particular study&quot;,
        &quot;tags&quot;: [
          &quot;Studies service&quot;
        ],
        &quot;operationId&quot;: &quot;getStudyEvents&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/eventNoParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/limitParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/offsetParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Collection of the Events&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/Events&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/study/{studyId}/events/{eventNo}&quot;: {
      &quot;put&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Update trial event dates&quot;,
        &quot;tags&quot;: [
          &quot;Studies service&quot;
        ],
        &quot;operationId&quot;: &quot;updateEventDatesForStudy&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/eventNumberParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/authorizationParam&quot;
          }
        ],
        &quot;requestBody&quot;: {
          &quot;required&quot;: true,
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/studyEventDates&quot;
              }
            }
          }
        },
        &quot;responses&quot;: {
          &quot;201&quot;: {
            &quot;description&quot;: &quot;Successful insertion/update response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIEventResponse&quot;
                }
              }
            }
          },
          &quot;202&quot;: {
            &quot;description&quot;: &quot;Successful delete response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIDeleteResponse&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;description&quot;: &quot;User is unauthorized.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUnauthorizedResponse&quot;
                }
              }
            }
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studies/{studyId}/personnel&quot;: {
      &quot;get&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Returns the collection of personnel for particular study&quot;,
        &quot;tags&quot;: [
          &quot;Studies service&quot;
        ],
        &quot;operationId&quot;: &quot;getStudyPersonnel&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/occupationCodeQueryParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/activeOnDateParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/limitParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/offsetParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;OK&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/PersonnelCollection&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studies/{studyId}/personnel/{personIdentifier}&quot;: {
      &quot;get&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Returns collection of person for particular study&quot;,
        &quot;tags&quot;: [
          &quot;Studies service&quot;
        ],
        &quot;operationId&quot;: &quot;getStudyPerson&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/personIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/occupationCodeQueryParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/activeOnDateParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/limitParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/offsetParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;OK&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/PersonnelCollection&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/study/{studyId}/personnel/{personIdentifier}/occupations/{occupationCode}&quot;: {
      &quot;post&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Person with {personIdentifier} will be assigned to the {studyId} as {occupationCode}&quot;,
        &quot;tags&quot;: [
          &quot;Studies service&quot;
        ],
        &quot;operationId&quot;: &quot;createPersonnelRecordOnStudy&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/personIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/occupationCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/authorizationParam&quot;
          }
        ],
        &quot;requestBody&quot;: {
          &quot;required&quot;: true,
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/studyRoleAssigment&quot;
              }
            }
          }
        },
        &quot;responses&quot;: {
          &quot;201&quot;: {
            &quot;description&quot;: &quot;Successful insertion/update response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPISuccessResponse&quot;
                }
              }
            }
          },
          &quot;202&quot;: {
            &quot;description&quot;: &quot;Successful delete response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIDeleteResponse&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;description&quot;: &quot;User is unauthorized.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUnauthorizedResponse&quot;
                }
              }
            }
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/study/{studyId}/personnel/{personIdentifier}/occupations/{occupationCode}/sequence/{sequenceNum}&quot;: {
      &quot;put&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Updates role assignment&quot;,
        &quot;tags&quot;: [
          &quot;Studies service&quot;
        ],
        &quot;operationId&quot;: &quot;updatePersonnelRecordOnStudy&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/personIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/occupationCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/sequenceNumParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/authorizationParam&quot;
          }
        ],
        &quot;requestBody&quot;: {
          &quot;required&quot;: true,
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/updStudyRoleAssigment&quot;
              }
            }
          }
        },
        &quot;responses&quot;: {
          &quot;201&quot;: {
            &quot;description&quot;: &quot;Successful insertion/update response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUpdateResponse&quot;
                }
              }
            }
          },
          &quot;202&quot;: {
            &quot;description&quot;: &quot;Successful delete response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIDeleteResponse&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;description&quot;: &quot;User is unauthorized.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUnauthorizedResponse&quot;
                }
              }
            }
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      },
      &quot;delete&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Person with {personIdentifier} will be unassigned from {occupationCode} role on  {studyId}&quot;,
        &quot;tags&quot;: [
          &quot;Studies service&quot;
        ],
        &quot;operationId&quot;: &quot;deletePersonnelRecordOnStudy&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/personIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/occupationCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/sequenceNumParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/authorizationParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;201&quot;: {
            &quot;description&quot;: &quot;Successful insertion/update response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPISuccessResponse&quot;
                }
              }
            }
          },
          &quot;202&quot;: {
            &quot;description&quot;: &quot;Successful delete response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIDeleteResponse&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;description&quot;: &quot;User is unauthorized.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUnauthorizedResponse&quot;
                }
              }
            }
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studies/{studyId}/recruitment&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Returns the collection of recruitment plan on the study level&quot;,
        &quot;tags&quot;: [
          &quot;Studies service&quot;
        ],
        &quot;operationId&quot;: &quot;getRecruitmentPlansByStudy&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;OK&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/StudyRecruitment&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studies/{studyId}/sites&quot;: {
      &quot;get&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Returns the collection of sites on the study level&quot;,
        &quot;tags&quot;: [
          &quot;Studies service&quot;
        ],
        &quot;operationId&quot;: &quot;getSitesByStudy&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/limitParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/offsetParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;OK&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;type&quot;: &quot;object&quot;,
                  &quot;properties&quot;: {
                    &quot;total&quot;: {
                      &quot;type&quot;: &quot;integer&quot;,
                      &quot;example&quot;: 12345
                    },
                    &quot;start&quot;: {
                      &quot;type&quot;: &quot;integer&quot;,
                      &quot;example&quot;: 10
                    },
                    &quot;end&quot;: {
                      &quot;type&quot;: &quot;integer&quot;,
                      &quot;example&quot;: 110
                    },
                    &quot;offset&quot;: {
                      &quot;type&quot;: &quot;integer&quot;,
                      &quot;example&quot;: 0
                    },
                    &quot;limit&quot;: {
                      &quot;type&quot;: &quot;integer&quot;,
                      &quot;example&quot;: 10
                    },
                    &quot;sites&quot;: {
                      &quot;$ref&quot;: &quot;#/components/schemas/SitesObj&quot;
                    }
                  }
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studies/{studyId}/countries&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Returns the collection of Information about countries for particular study&quot;,
        &quot;tags&quot;: [
          &quot;Studies service&quot;
        ],
        &quot;operationId&quot;: &quot;getStudyCountries&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/activeStudyCountryParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/eventNoStudyParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/actualDateAfterParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/actualDateBeforeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/plannedDateAfterParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/plannedDateBeforeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/originalDateAfterParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/originalDateBeforeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/limitParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/offsetParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;List of the countrties for concrete study&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/Countries&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studies/{studyId}/countries/{countryCode}&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Returns the collection of Information about countries for a particular study and country&quot;,
        &quot;tags&quot;: [
          &quot;Studies service&quot;
        ],
        &quot;operationId&quot;: &quot;getStudyCountryCode&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/countryCodeParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Country level information&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/CountryCodeInfo&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studies/{studyId}/countries/{countryCode}/events&quot;: {
      &quot;get&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Returns the collection of the events for particular study id and country code&quot;,
        &quot;tags&quot;: [
          &quot;Studies service&quot;
        ],
        &quot;operationId&quot;: &quot;getCountryEvents&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/countryCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/eventNoParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/limitParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/offsetParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Collection of the Events&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/Events&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studies/{studyId}/countries/{countryCode}/personnel&quot;: {
      &quot;get&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Returns the collection of the personnel for particular study id and country&quot;,
        &quot;tags&quot;: [
          &quot;Studies service&quot;
        ],
        &quot;operationId&quot;: &quot;getCountryPersonnel&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/countryCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/occupationCodeQueryParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/activeOnDateParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/limitParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/offsetParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Collection of the Personnel&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/PersonnelCollection&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studies/{studyId}/countries/{countryCode}/personnel/{personIdentifier}&quot;: {
      &quot;get&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Returns the collection of the personnel for particular study id, country and person&quot;,
        &quot;tags&quot;: [
          &quot;Studies service&quot;
        ],
        &quot;operationId&quot;: &quot;getCountryPerson&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/countryCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/personIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/occupationCodeQueryParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/activeOnDateParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/limitParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/offsetParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Collection of the Personnel&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/PersonnelCollection&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studyCountry/study/{studyId}/countries/{countryCode}/personnel/{personIdentifier}/occupations/{occupationCode}&quot;: {
      &quot;post&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Person with {PersonIdentifier} will be assigned to the {studyId}/{countryCode} as {occupationCode}&quot;,
        &quot;tags&quot;: [
          &quot;Country service&quot;
        ],
        &quot;operationId&quot;: &quot;createPersonnelRecordOnStudyCountry&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/countryCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/personIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/occupationCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/authorizationParam&quot;
          }
        ],
        &quot;requestBody&quot;: {
          &quot;required&quot;: true,
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/countryRoleAssigment&quot;
              }
            }
          }
        },
        &quot;responses&quot;: {
          &quot;201&quot;: {
            &quot;description&quot;: &quot;Successful insertion/update response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPISuccessResponse&quot;
                }
              }
            }
          },
          &quot;202&quot;: {
            &quot;description&quot;: &quot;Successful delete response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIDeleteResponse&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;description&quot;: &quot;User is unauthorized.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUnauthorizedResponse&quot;
                }
              }
            }
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studyCountry/study/{studyId}/countries/{countryCode}/personnel/{personIdentifier}/occupations/{occupationCode}/sequence/{sequenceNum}&quot;: {
      &quot;put&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Updates role assignment&quot;,
        &quot;tags&quot;: [
          &quot;Country service&quot;
        ],
        &quot;operationId&quot;: &quot;updatePersonnelRecordOnStudyCountry&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/countryCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/personIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/occupationCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/sequenceNumParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/authorizationParam&quot;
          }
        ],
        &quot;requestBody&quot;: {
          &quot;required&quot;: true,
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/updCountryRoleAssigment&quot;
              }
            }
          }
        },
        &quot;responses&quot;: {
          &quot;201&quot;: {
            &quot;description&quot;: &quot;Successful insertion/update response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUpdateResponse&quot;
                }
              }
            }
          },
          &quot;202&quot;: {
            &quot;description&quot;: &quot;Successful delete response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIDeleteResponse&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;description&quot;: &quot;User is unauthorized.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUnauthorizedResponse&quot;
                }
              }
            }
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      },
      &quot;delete&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Person with {personIdentifier} will be unassigned from {occupationCode} role on  {studyId}/{countryCode}/{siteIdentifier}&quot;,
        &quot;tags&quot;: [
          &quot;Country service&quot;
        ],
        &quot;operationId&quot;: &quot;deletePersonnelRecordOnStudyCountry&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/countryCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/personIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/occupationCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/sequenceNumParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/authorizationParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;201&quot;: {
            &quot;description&quot;: &quot;Successful insertion/update response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPISuccessResponse&quot;
                }
              }
            }
          },
          &quot;202&quot;: {
            &quot;description&quot;: &quot;Successful delete response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIDeleteResponse&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;description&quot;: &quot;User is unauthorized.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUnauthorizedResponse&quot;
                }
              }
            }
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studyCountry/study/{studyId}/countries/{countryCode}/events/{eventNo}&quot;: {
      &quot;put&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Update trial country event dates&quot;,
        &quot;tags&quot;: [
          &quot;Country service&quot;
        ],
        &quot;operationId&quot;: &quot;updateEventDatesForStudyCountry&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/countryCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/eventNumberParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/authorizationParam&quot;
          }
        ],
        &quot;requestBody&quot;: {
          &quot;required&quot;: true,
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/studyCountryEventDates&quot;
              }
            }
          }
        },
        &quot;responses&quot;: {
          &quot;201&quot;: {
            &quot;description&quot;: &quot;Successful insertion/update response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIEventResponse&quot;
                }
              }
            }
          },
          &quot;202&quot;: {
            &quot;description&quot;: &quot;Successful delete response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIDeleteResponse&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;description&quot;: &quot;User is unauthorized.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUnauthorizedResponse&quot;
                }
              }
            }
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studyCountry/study/{studyId}/countries/{countryCode}/ethicalApprovalLevel&quot;: {
      &quot;put&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Update IRB/IEC Approval Level&quot;,
        &quot;tags&quot;: [
          &quot;Country service&quot;
        ],
        &quot;operationId&quot;: &quot;updateEthicalApprovalLevel&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/countryCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/authorizationParam&quot;
          }
        ],
        &quot;requestBody&quot;: {
          &quot;required&quot;: true,
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/ethicalApproval&quot;
              }
            }
          }
        },
        &quot;responses&quot;: {
          &quot;201&quot;: {
            &quot;description&quot;: &quot;Successful insertion/update response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIEthicalApprovalResponse&quot;
                }
              }
            }
          },
          &quot;202&quot;: {
            &quot;description&quot;: &quot;Successful delete response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIEthicalApprovalResponse&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;description&quot;: &quot;User is unauthorized.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUnauthorizedResponse&quot;
                }
              }
            }
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studies/{studyId}/countries/{countryCode}/recruitment&quot;: {
      &quot;get&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Returns the collection of recruitment plan on the country level&quot;,
        &quot;tags&quot;: [
          &quot;Studies service&quot;
        ],
        &quot;operationId&quot;: &quot;getRecruitmentPlansByCountries&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/countryCodeParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;OK&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/StudyRecruitment&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studies/{studyId}/countries/{countryCode}/sites&quot;: {
      &quot;get&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Returns the collection of sites on the country level&quot;,
        &quot;tags&quot;: [
          &quot;Studies service&quot;
        ],
        &quot;operationId&quot;: &quot;getSitesByCountry&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/countryCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/limitParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/offsetParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;OK&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/SitesCountry&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studies/{studyId}/countries/{countryCode}/sites/{siteId}&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Returns the collection of site information for particular site level&quot;,
        &quot;tags&quot;: [
          &quot;Studies service&quot;
        ],
        &quot;operationId&quot;: &quot;getSitebyCountrySiteId&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/countryCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/siteIdentifierParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Site Information&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;type&quot;: &quot;object&quot;,
                  &quot;properties&quot;: {
                    &quot;site&quot;: {
                      &quot;$ref&quot;: &quot;#/components/schemas/StudySiteId&quot;
                    }
                  }
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studies/{studyId}/countries/{countryCode}/sites/{siteId}/personnel&quot;: {
      &quot;get&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Returns the collection of the personnel for particular study id, country and site&quot;,
        &quot;tags&quot;: [
          &quot;Studies service&quot;
        ],
        &quot;operationId&quot;: &quot;getSitePersonnel&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/countryCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/siteIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/occupationCodeQueryParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/activeOnDateParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Collection of personnel&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/PersonnelCollection&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studies/{studyId}/countries/{countryCode}/sites/{siteId}/personnel/{personIdentifier}&quot;: {
      &quot;get&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Returns collection of person for particular study, country and site&quot;,
        &quot;tags&quot;: [
          &quot;Studies service&quot;
        ],
        &quot;operationId&quot;: &quot;getSitePerson&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/countryCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/siteIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/personIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/occupationCodeQueryParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/activeOnDateParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;OK&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/PersonnelCollection&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/sites&quot;: {
      &quot;get&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Returns collections of sites&quot;,
        &quot;tags&quot;: [
          &quot;Sites service&quot;
        ],
        &quot;operationId&quot;: &quot;getSites&quot;,
        &quot;parameters&quot;: [
          {
            &quot;name&quot;: &quot;q&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;required&quot;: false,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;string&quot;
            },
            &quot;example&quot;: &quot;&quot;,
            &quot;description&quot;: &quot;As a query line User can use one of the possible details: trialNo,  countryCode  siteId&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/activeStudyParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/limitParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/offsetParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;OK&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/AllSites&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studySite/study/{studyId}/countries/{countryCode}/sites/{siteId}/personnel/{personIdentifier}/occupations/{occupationCode}&quot;: {
      &quot;post&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Person with {personIdentifier} will be assigned to the {studyId}/{countryCode}/{siteId} as {occupationCode}&quot;,
        &quot;tags&quot;: [
          &quot;Sites service&quot;
        ],
        &quot;operationId&quot;: &quot;createPersonnelRecordOnSite&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/countryCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/siteIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/personIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/occupationCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/authorizationParam&quot;
          }
        ],
        &quot;requestBody&quot;: {
          &quot;required&quot;: true,
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/siteRoleAssigment&quot;
              }
            }
          }
        },
        &quot;responses&quot;: {
          &quot;201&quot;: {
            &quot;description&quot;: &quot;Successful insertion/update response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPISuccessResponse&quot;
                }
              }
            }
          },
          &quot;202&quot;: {
            &quot;description&quot;: &quot;Successful delete response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIDeleteResponse&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;description&quot;: &quot;User is unauthorized.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUnauthorizedResponse&quot;
                }
              }
            }
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studySite/study/{studyId}/countries/{countryCode}/sites/{siteId}/personnel/{personIdentifier}/occupations/{occupationCode}/sequence/{sequenceNum}&quot;: {
      &quot;put&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Updates role assignment&quot;,
        &quot;tags&quot;: [
          &quot;Sites service&quot;
        ],
        &quot;operationId&quot;: &quot;updatePersonnelRecordOnSite&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/countryCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/personIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/siteIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/occupationCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/sequenceNumParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/authorizationParam&quot;
          }
        ],
        &quot;requestBody&quot;: {
          &quot;required&quot;: true,
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/updSiteRoleAssigment&quot;
              }
            }
          }
        },
        &quot;responses&quot;: {
          &quot;201&quot;: {
            &quot;description&quot;: &quot;Successful insertion/update response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUpdateResponse&quot;
                }
              }
            }
          },
          &quot;202&quot;: {
            &quot;description&quot;: &quot;Successful delete response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIDeleteResponse&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;description&quot;: &quot;User is unauthorized.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUnauthorizedResponse&quot;
                }
              }
            }
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      },
      &quot;delete&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Person with {personIdentifier} will be unassigned from {occupationCode} role on  {studyId}/{countryCode}/{siteId}&quot;,
        &quot;tags&quot;: [
          &quot;Sites service&quot;
        ],
        &quot;operationId&quot;: &quot;deletePersonnelRecord&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/countryCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/personIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/occupationCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/siteIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/sequenceNumParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/authorizationParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;201&quot;: {
            &quot;description&quot;: &quot;Successful insertion/update response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPISuccessResponse&quot;
                }
              }
            }
          },
          &quot;202&quot;: {
            &quot;description&quot;: &quot;Successful delete response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIDeleteResponse&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;description&quot;: &quot;User is unauthorized.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUnauthorizedResponse&quot;
                }
              }
            }
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studySite/study/{studyId}/countries/{countryCode}/sites/{siteId}/clinicalPersonnel/{personIdentifier}/occupations/{occupationCode}&quot;: {
      &quot;post&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Clinical Person with {personIdentifier} will be assigned to the {studyId}/{countryCode}/{siteId} as {occupationCode}&quot;,
        &quot;tags&quot;: [
          &quot;Sites service&quot;
        ],
        &quot;operationId&quot;: &quot;createClinicalPersonnelRecordOnSite&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/countryCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/siteIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/personIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/occupationCodeParamCP&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/authorizationParam&quot;
          }
        ],
        &quot;requestBody&quot;: {
          &quot;required&quot;: true,
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/siteRoleAssigment&quot;
              }
            }
          }
        },
        &quot;responses&quot;: {
          &quot;201&quot;: {
            &quot;description&quot;: &quot;Successful insertion/update response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPISuccessResponse&quot;
                }
              }
            }
          },
          &quot;202&quot;: {
            &quot;description&quot;: &quot;Successful delete response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIDeleteResponse&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;description&quot;: &quot;User is unauthorized.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUnauthorizedResponse&quot;
                }
              }
            }
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studySite/study/{studyId}/countries/{countryCode}/sites/{siteId}/clinicalPersonnel/{personIdentifier}/occupations/{occupationCode}/sequence/{sequenceNum}&quot;: {
      &quot;put&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Updates role assignmentfor a clinical personnel on a trial site level&quot;,
        &quot;tags&quot;: [
          &quot;Sites service&quot;
        ],
        &quot;operationId&quot;: &quot;updateClinicalPersonnelRecordOnSite&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/countryCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/siteIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/personIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/occupationCodeParamCP&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/sequenceNumParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/authorizationParam&quot;
          }
        ],
        &quot;requestBody&quot;: {
          &quot;required&quot;: true,
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/updSiteRoleAssigment&quot;
              }
            }
          }
        },
        &quot;responses&quot;: {
          &quot;201&quot;: {
            &quot;description&quot;: &quot;Successful insertion/update response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUpdateResponse&quot;
                }
              }
            }
          },
          &quot;202&quot;: {
            &quot;description&quot;: &quot;Successful delete response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIDeleteResponse&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;description&quot;: &quot;User is unauthorized.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUnauthorizedResponse&quot;
                }
              }
            }
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      },
      &quot;delete&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Clinical Person with {personIdentifier} will be unassigned from {occupationCode} role on  {studyId}/{countryCode}/{siteId}&quot;,
        &quot;tags&quot;: [
          &quot;Sites service&quot;
        ],
        &quot;operationId&quot;: &quot;deleteClinicalPersonnelRecord&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/countryCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/siteIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/personIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/occupationCodeParamCP&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/sequenceNumParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/authorizationParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;201&quot;: {
            &quot;description&quot;: &quot;Successful insertion/update response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPISuccessResponse&quot;
                }
              }
            }
          },
          &quot;202&quot;: {
            &quot;description&quot;: &quot;Successful delete response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIDeleteResponse&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;description&quot;: &quot;User is unauthorized.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUnauthorizedResponse&quot;
                }
              }
            }
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studies/{studyId}/countries/{countryCode}/sites/{siteId}/events&quot;: {
      &quot;get&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Returns the collection of the events for particular study,country and site&quot;,
        &quot;tags&quot;: [
          &quot;Studies service&quot;
        ],
        &quot;operationId&quot;: &quot;getStudyEventsbyCountrySite&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/countryCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/siteIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/eventNoParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/limitParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/offsetParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Collection of the Events&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/Events&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studySite/study/{studyId}/countries/{countryCode}/sites/{siteId}/events/{eventNo}&quot;: {
      &quot;put&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Update trial site event dates&quot;,
        &quot;tags&quot;: [
          &quot;Sites service&quot;
        ],
        &quot;operationId&quot;: &quot;updateEventDatesForStudySite&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/countryCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/siteIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/eventNumberParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/authorizationParam&quot;
          }
        ],
        &quot;requestBody&quot;: {
          &quot;required&quot;: true,
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/studySiteEventDates&quot;
              }
            }
          }
        },
        &quot;responses&quot;: {
          &quot;201&quot;: {
            &quot;description&quot;: &quot;Successful insertion/update response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIEventResponse&quot;
                }
              }
            }
          },
          &quot;202&quot;: {
            &quot;description&quot;: &quot;Successful delete response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIDeleteResponse&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;description&quot;: &quot;User is unauthorized.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUnauthorizedResponse&quot;
                }
              }
            }
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studies/{studyId}/countries/{countryCode}/sites/{siteId}/recruitment&quot;: {
      &quot;get&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Returns the collection of recruitment plan on the study/country/site level&quot;,
        &quot;tags&quot;: [
          &quot;Studies service&quot;
        ],
        &quot;operationId&quot;: &quot;getRecruitmentPlansByCountriesandSite&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/countryCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/siteIdentifierParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;OK&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/StudySiteRecruitment&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studies/allpersonnels/{studyId}&quot;: {
      &quot;get&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Returns the collection of personnels based on study on the study/country/site level&quot;,
        &quot;tags&quot;: [
          &quot;Studies service&quot;
        ],
        &quot;operationId&quot;: &quot;getStudiesAllPersonnel&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/occupationCodeNewQueryParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/activeOnDateParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/levelParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/personnelTypeQueryParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/copiedFromClinicalPlan&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/copiedFromTrial&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/copiedFromTrialCountry&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;OK&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/StudyAllPersonnelCollection&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/personnel/{personIdentifier}/sites&quot;: {
      &quot;get&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Returns collection of sites for person&quot;,
        &quot;tags&quot;: [
          &quot;Personnel service&quot;
        ],
        &quot;operationId&quot;: &quot;getPersonnelById&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/personIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/limitParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/offsetParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;OK&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/PersonelSites&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/personnel/email/{emailAddress}&quot;: {
      &quot;get&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Returns collection of identifiers for provided email address&quot;,
        &quot;tags&quot;: [
          &quot;Personnel service&quot;
        ],
        &quot;operationId&quot;: &quot;getPersonnelByEmail&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/emailParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;OK&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/PersonelNum&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/persons&quot;: {
      &quot;get&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Returns collections of all physical persons&quot;,
        &quot;tags&quot;: [
          &quot;Personnel service&quot;
        ],
        &quot;operationId&quot;: &quot;getPersons&quot;,
        &quot;parameters&quot;: [
          {
            &quot;name&quot;: &quot;q&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;required&quot;: false,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;string&quot;
            },
            &quot;example&quot;: &quot;&quot;,
            &quot;description&quot;: &quot;As a query line User can use one of the possible person details: firstName,  lastName  email, CWID&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/limitParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/offsetParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;OK&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/Persons&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studySite/study/{studyId}/countries/{countryCode}/sites/{siteId}/confirmedSiteFlag&quot;: {
      &quot;put&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Updates Confirmed Flag  information of a trial site&quot;,
        &quot;tags&quot;: [
          &quot;Sites service&quot;
        ],
        &quot;operationId&quot;: &quot;UpdateEthicalApprovalStudySite&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/countryCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/siteIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/authorizationParam&quot;
          }
        ],
        &quot;requestBody&quot;: {
          &quot;required&quot;: true,
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/updationOfSiteConfirmedFlag&quot;
              }
            }
          }
        },
        &quot;responses&quot;: {
          &quot;201&quot;: {
            &quot;description&quot;: &quot;Successful insertion/update response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIConfirmFlagResponse&quot;
                }
              }
            }
          },
          &quot;202&quot;: {
            &quot;description&quot;: &quot;Successful delete response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIDeleteResponse&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;description&quot;: &quot;User is unauthorized.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUnauthorizedResponse&quot;
                }
              }
            }
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studySite/study/{studyId}/countryCode/{countryCode}&quot;: {
      &quot;post&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Creates New Study Site&quot;,
        &quot;tags&quot;: [
          &quot;Sites service&quot;
        ],
        &quot;operationId&quot;: &quot;createNewStudySite&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/countryCodeParam&quot;
          }
        ],
        &quot;requestBody&quot;: {
          &quot;required&quot;: true,
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/newStudySite&quot;
              }
            }
          }
        },
        &quot;responses&quot;: {
          &quot;201&quot;: {
            &quot;description&quot;: &quot;Successful insertion/update response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIRefDataNS201Response&quot;
                }
              }
            }
          },
          &quot;202&quot;: {
            &quot;description&quot;: &quot;Successful delete response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIinvDeleteResponse&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;description&quot;: &quot;User is unauthorized.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUnauthorizedResponse&quot;
                }
              }
            }
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studySite/study/{studyId}/countryCode/{countryCode}/sites/{siteId}&quot;: {
      &quot;put&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Updates Primary Investigator for Study Site&quot;,
        &quot;tags&quot;: [
          &quot;Sites service&quot;
        ],
        &quot;operationId&quot;: &quot;updateNewStudySite&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/studyIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/countryCodeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/siteIdentifierParam&quot;
          }
        ],
        &quot;requestBody&quot;: {
          &quot;required&quot;: true,
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/updStudySite&quot;
              }
            }
          }
        },
        &quot;responses&quot;: {
          &quot;201&quot;: {
            &quot;description&quot;: &quot;Successful insertion/update response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIRefDataNS201Response&quot;
                }
              }
            }
          },
          &quot;202&quot;: {
            &quot;description&quot;: &quot;Successful delete response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIinvDeleteResponse&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;description&quot;: &quot;User is unauthorized.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUnauthorizedResponse&quot;
                }
              }
            }
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/occupations&quot;: {
      &quot;get&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Returns collections of occupations&quot;,
        &quot;tags&quot;: [
          &quot;Occupation service&quot;
        ],
        &quot;operationId&quot;: &quot;getOccupation&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/occupationCodeQueryParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/occupationTypeParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/limitParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/offsetParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;OK&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/AllOccupationsCollection&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/persons/{personIdentifier}&quot;: {
      &quot;get&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Returns concrete person and corresponding studies&quot;,
        &quot;tags&quot;: [
          &quot;Personnel service&quot;
        ],
        &quot;operationId&quot;: &quot;getPersonById&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/personIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/activeStudyParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/occupationCodeQueryParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/activeOnDateParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/limitParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/offsetParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;OK&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;type&quot;: &quot;object&quot;,
                  &quot;properties&quot;: {
                    &quot;personnel&quot;: {
                      &quot;$ref&quot;: &quot;#/components/schemas/Person&quot;
                    }
                  }
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/persons/{personIdentifier}/occupations/studies&quot;: {
      &quot;get&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Returns collection of studies for concrete person&quot;,
        &quot;tags&quot;: [
          &quot;Personnel service&quot;
        ],
        &quot;operationId&quot;: &quot;getPersonOccupation&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/personIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/activeStudyParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/occupationCodeQueryParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/activeOnDateParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/limitParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/offsetParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;OK&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/PersonStudyOccupation&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/persons/{personIdentifier}/occupations/studiesCountries&quot;: {
      &quot;get&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Returns collection of countries for concrete person&quot;,
        &quot;tags&quot;: [
          &quot;Personnel service&quot;
        ],
        &quot;operationId&quot;: &quot;getPersonOccupationStudyCountry&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/personIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/activeStudyParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/occupationCodeQueryParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/activeOnDateParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/limitParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/offsetParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;OK&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/PersonStudyCountryOccupation&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/persons/{personIdentifier}/occupations/studiesSites&quot;: {
      &quot;get&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Returns collection of sites for concrete person&quot;,
        &quot;tags&quot;: [
          &quot;Personnel service&quot;
        ],
        &quot;operationId&quot;: &quot;getPersonOccupationStudySite&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/personIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/activeStudyParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/occupationCodeQueryParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/activeOnDateParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/limitParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/offsetParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;OK&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/PersonStudySiteOccupation&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/persons/{personIdentifier}/occupations&quot;: {
      &quot;get&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Returns collection of persons&quot;,
        &quot;tags&quot;: [
          &quot;Personnel service&quot;
        ],
        &quot;operationId&quot;: &quot;getPersonOccupaton&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/personIdentifierParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/activeStudyParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/occupationCodeQueryParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/activeOnDateParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/limitParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/offsetParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;OK&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/PersonnelCollectionOccupation&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/specification&quot;: {
      &quot;get&quot;: {
        &quot;operationId&quot;: &quot;getSpecification&quot;,
        &quot;description&quot;: &quot;&quot;,
        &quot;tags&quot;: [
          &quot;Specification service&quot;
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;OAS specification&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/specification&quot;
                }
              }
            }
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/studyLocation/{centerNo}/{personIdentifier}/studies&quot;: {
      &quot;get&quot;: {
        &quot;operationId&quot;: &quot;getStudyLocation&quot;,
        &quot;description&quot;: &quot;&quot;,
        &quot;tags&quot;: [
          &quot;Study Location service&quot;
        ],
        &quot;parameters&quot;: [
          {
            &quot;name&quot;: &quot;centerNo&quot;,
            &quot;in&quot;: &quot;path&quot;,
            &quot;required&quot;: true,
            &quot;example&quot;: &quot;10290&quot;,
            &quot;description&quot;: &quot;The center No&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;integer&quot;
            }
          },
          {
            &quot;name&quot;: &quot;personIdentifier&quot;,
            &quot;in&quot;: &quot;path&quot;,
            &quot;required&quot;: true,
            &quot;example&quot;: &quot;10656&quot;,
            &quot;description&quot;: &quot;Impact PERSONNEL_NO&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;integer&quot;
            }
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/limitParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/offsetParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;List of the studies&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/StudyLocations&quot;
                }
              }
            }
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/medicalUnits&quot;: {
      &quot;get&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Returns collections of medical unit&quot;,
        &quot;tags&quot;: [
          &quot;Medical Unit service&quot;
        ],
        &quot;operationId&quot;: &quot;getMedicalUnitservice&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/medicalUnitCodeQueryParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/limitParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/offsetParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;OK&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/AllMedicalUnitCollection&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/referenceData/allBayerPersonnel&quot;: {
      &quot;get&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Returns Bayer Personnel&quot;,
        &quot;tags&quot;: [
          &quot;Reference Data service&quot;
        ],
        &quot;operationId&quot;: &quot;returnBayerPersonnel&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/limitParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/offsetParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;OK&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/AllBayerPersonnelCollection&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/referenceData/allClinicalPersonnel&quot;: {
      &quot;get&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Returns clinical Personnel&quot;,
        &quot;tags&quot;: [
          &quot;Reference Data service&quot;
        ],
        &quot;operationId&quot;: &quot;returnClinicalPersonnel&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/limitParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/offsetParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;OK&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/AllClinicalPersonnelCollection&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/referenceData/allCentre&quot;: {
      &quot;get&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Returns all centre information&quot;,
        &quot;tags&quot;: [
          &quot;Reference Data service&quot;
        ],
        &quot;operationId&quot;: &quot;returnAllCentrePersonnel&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/limitParam&quot;
          },
          {
            &quot;$ref&quot;: &quot;#/components/parameters/offsetParam&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;OK&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/AllCentreCollection&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Unauthorized&quot;
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/reference/bayerPersonnel&quot;: {
      &quot;post&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Creates Bayer Personnel&quot;,
        &quot;tags&quot;: [
          &quot;Reference Data service&quot;
        ],
        &quot;operationId&quot;: &quot;createBayerPersonnel&quot;,
        &quot;requestBody&quot;: {
          &quot;required&quot;: true,
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/bayerPersonnel&quot;
              }
            }
          }
        },
        &quot;responses&quot;: {
          &quot;201&quot;: {
            &quot;description&quot;: &quot;Successful insertion/update response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIRefDataBp201Response&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;description&quot;: &quot;User is unauthorized.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUnauthorizedResponse&quot;
                }
              }
            }
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/reference/clinicalPersonnel&quot;: {
      &quot;post&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Creates Clinical Personnel&quot;,
        &quot;tags&quot;: [
          &quot;Reference Data service&quot;
        ],
        &quot;operationId&quot;: &quot;createClinicalPersonnel&quot;,
        &quot;requestBody&quot;: {
          &quot;required&quot;: true,
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/clinicalPersonnel&quot;
              }
            }
          }
        },
        &quot;responses&quot;: {
          &quot;201&quot;: {
            &quot;description&quot;: &quot;Successful insertion/update response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIRefDataCp201Response&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;description&quot;: &quot;User is unauthorized.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUnauthorizedResponse&quot;
                }
              }
            }
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/reference/centre&quot;: {
      &quot;post&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Creates New Centre&quot;,
        &quot;tags&quot;: [
          &quot;Reference Data service&quot;
        ],
        &quot;operationId&quot;: &quot;createNewCentre&quot;,
        &quot;requestBody&quot;: {
          &quot;required&quot;: true,
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/refCentre&quot;
              }
            }
          }
        },
        &quot;responses&quot;: {
          &quot;201&quot;: {
            &quot;description&quot;: &quot;Successful insertion/update response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIRefDataNC201Response&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;description&quot;: &quot;User is unauthorized.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUnauthorizedResponse&quot;
                }
              }
            }
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/reference/bayerPersonnel/{personIdentifier}&quot;: {
      &quot;put&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Updates Bayer Personnel&quot;,
        &quot;tags&quot;: [
          &quot;Reference Data service&quot;
        ],
        &quot;operationId&quot;: &quot;updateBayerPersonnel&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/personIdentifierParam&quot;
          }
        ],
        &quot;requestBody&quot;: {
          &quot;required&quot;: true,
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/updBayerPersonnel&quot;
              }
            }
          }
        },
        &quot;responses&quot;: {
          &quot;201&quot;: {
            &quot;description&quot;: &quot;Successful insertion/update response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIRefDataBp201Response&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;description&quot;: &quot;User is unauthorized.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUnauthorizedResponse&quot;
                }
              }
            }
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/reference/clinicalPersonnel/{personIdentifier}&quot;: {
      &quot;put&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Updates Clinical Personnel&quot;,
        &quot;tags&quot;: [
          &quot;Reference Data service&quot;
        ],
        &quot;operationId&quot;: &quot;updateClinicalPersonnel&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/personIdentifierParam&quot;
          }
        ],
        &quot;requestBody&quot;: {
          &quot;required&quot;: true,
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/updClinicalPersonnel&quot;
              }
            }
          }
        },
        &quot;responses&quot;: {
          &quot;201&quot;: {
            &quot;description&quot;: &quot;Successful insertion/update response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIRefDataBp201Response&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;description&quot;: &quot;User is unauthorized.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUnauthorizedResponse&quot;
                }
              }
            }
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/reference/centre/{centreNo}&quot;: {
      &quot;put&quot;: {
        &quot;deprecated&quot;: false,
        &quot;description&quot;: &quot;Updates Centre&quot;,
        &quot;tags&quot;: [
          &quot;Reference Data service&quot;
        ],
        &quot;operationId&quot;: &quot;updateCentre&quot;,
        &quot;parameters&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/parameters/centreNoParam&quot;
          }
        ],
        &quot;requestBody&quot;: {
          &quot;required&quot;: true,
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/updCentre&quot;
              }
            }
          }
        },
        &quot;responses&quot;: {
          &quot;201&quot;: {
            &quot;description&quot;: &quot;Successful insertion/update response message.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIRefDataBp201Response&quot;
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadRequest&quot;
          },
          &quot;401&quot;: {
            &quot;description&quot;: &quot;User is unauthorized.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUnauthorizedResponse&quot;
                }
              }
            }
          },
          &quot;403&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/Forbidden&quot;
          },
          &quot;404&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/NotFound&quot;
          },
          &quot;415&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/UnsupportedMediaType&quot;
          },
          &quot;429&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/TooManyRequests&quot;
          },
          &quot;500&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/InternalServerError&quot;
          },
          &quot;502&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/BadGateway&quot;
          },
          &quot;503&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/ServiceUnavailable&quot;
          },
          &quot;504&quot;: {
            &quot;$ref&quot;: &quot;#/components/responses/GatewayTimeout&quot;
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;unexpected error&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
                }
              }
            }
          }
        }
      }
    }
  },
  &quot;components&quot;: {
    &quot;responses&quot;: {
      &quot;BadRequest&quot;: {
        &quot;description&quot;: &quot;The request parameters are in bad format.&quot;,
        &quot;content&quot;: {
          &quot;application/json&quot;: {
            &quot;schema&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
            }
          }
        }
      },
      &quot;Unauthorized&quot;: {
        &quot;description&quot;: &quot;User is unauthorized.&quot;,
        &quot;content&quot;: {
          &quot;application/json&quot;: {
            &quot;schema&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
            }
          }
        }
      },
      &quot;Forbidden&quot;: {
        &quot;description&quot;: &quot;Access forbidden.&quot;,
        &quot;content&quot;: {
          &quot;application/json&quot;: {
            &quot;schema&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
            }
          }
        }
      },
      &quot;NotFound&quot;: {
        &quot;description&quot;: &quot;The resource your required is not found.&quot;,
        &quot;content&quot;: {
          &quot;application/json&quot;: {
            &quot;schema&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
            }
          }
        }
      },
      &quot;MethodNotAllowed&quot;: {
        &quot;description&quot;: &quot;Method is not allowed.&quot;,
        &quot;content&quot;: {
          &quot;application/json&quot;: {
            &quot;schema&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
            }
          }
        }
      },
      &quot;NotAcceptable&quot;: {
        &quot;description&quot;: &quot;Your request is not acceptable.&quot;,
        &quot;content&quot;: {
          &quot;application/json&quot;: {
            &quot;schema&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
            }
          }
        }
      },
      &quot;RequestTimeout&quot;: {
        &quot;description&quot;: &quot;Request timeout.&quot;,
        &quot;content&quot;: {
          &quot;application/json&quot;: {
            &quot;schema&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
            }
          }
        }
      },
      &quot;Conflict&quot;: {
        &quot;description&quot;: &quot;The request could not be completed due to a conflict with the current state of the target resource. Please retry it later.&quot;,
        &quot;content&quot;: {
          &quot;application/json&quot;: {
            &quot;schema&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
            }
          }
        }
      },
      &quot;Gone&quot;: {
        &quot;description&quot;: &quot;The resource your requested has been removed permanently.&quot;,
        &quot;content&quot;: {
          &quot;application/json&quot;: {
            &quot;schema&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
            }
          }
        }
      },
      &quot;LengthRequired&quot;: {
        &quot;description&quot;: &quot;Please define Content-Length in header.&quot;,
        &quot;content&quot;: {
          &quot;application/json&quot;: {
            &quot;schema&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
            }
          }
        }
      },
      &quot;PayloadTooLarge&quot;: {
        &quot;description&quot;: &quot;Request body is too large. The maximum size is 100MB.&quot;,
        &quot;content&quot;: {
          &quot;application/json&quot;: {
            &quot;schema&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
            }
          }
        }
      },
      &quot;URITooLong&quot;: {
        &quot;description&quot;: &quot;URI is too long, put the parameters into body instead.&quot;,
        &quot;content&quot;: {
          &quot;application/json&quot;: {
            &quot;schema&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
            }
          }
        }
      },
      &quot;UnsupportedMediaType&quot;: {
        &quot;description&quot;: &quot;Unsupported media type.&quot;,
        &quot;content&quot;: {
          &quot;application/json&quot;: {
            &quot;schema&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
            }
          }
        }
      },
      &quot;UnsupportedExportPdfMediaType&quot;: {
        &quot;description&quot;: &quot;Unsupported media type, we only support PDF for exporting now.&quot;,
        &quot;content&quot;: {
          &quot;application/json&quot;: {
            &quot;schema&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
            }
          }
        }
      },
      &quot;EnhanceYourCalm&quot;: {
        &quot;description&quot;: &quot;Your request is received, please wait patient.&quot;,
        &quot;content&quot;: {
          &quot;application/json&quot;: {
            &quot;schema&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
            }
          }
        }
      },
      &quot;UnprocessableEntity&quot;: {
        &quot;description&quot;: &quot;The entity your provided is unprocessable.&quot;,
        &quot;content&quot;: {
          &quot;application/json&quot;: {
            &quot;schema&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
            }
          }
        }
      },
      &quot;DigestMismatch&quot;: {
        &quot;description&quot;: &quot;Digest is mismatch.&quot;,
        &quot;content&quot;: {
          &quot;application/json&quot;: {
            &quot;schema&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
            }
          }
        }
      },
      &quot;TooManyRequests&quot;: {
        &quot;description&quot;: &quot;You have sent too many requests, please retry it later.&quot;,
        &quot;content&quot;: {
          &quot;application/json&quot;: {
            &quot;schema&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
            }
          }
        }
      },
      &quot;InternalServerError&quot;: {
        &quot;description&quot;: &quot;The server encountered an internal error or misconfiguration and was unable to complete your request.&quot;,
        &quot;content&quot;: {
          &quot;application/json&quot;: {
            &quot;schema&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
            }
          }
        }
      },
      &quot;NotImplemented&quot;: {
        &quot;description&quot;: &quot;Method not implemented.&quot;,
        &quot;content&quot;: {
          &quot;application/json&quot;: {
            &quot;schema&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
            }
          }
        }
      },
      &quot;BadGateway&quot;: {
        &quot;description&quot;: &quot;Bad gateway.&quot;,
        &quot;content&quot;: {
          &quot;application/json&quot;: {
            &quot;schema&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
            }
          }
        }
      },
      &quot;ServiceUnavailable&quot;: {
        &quot;description&quot;: &quot;Server is currently unable to handle your request due to a temporary overload   or scheduled maintenance, please retry it later.&quot;,
        &quot;content&quot;: {
          &quot;application/json&quot;: {
            &quot;schema&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
            }
          }
        }
      },
      &quot;GatewayTimeout&quot;: {
        &quot;description&quot;: &quot;Gateway timeout.&quot;,
        &quot;content&quot;: {
          &quot;application/json&quot;: {
            &quot;schema&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/ErrorResponse&quot;
            }
          }
        }
      }
    },
    &quot;schemas&quot;: {
      &quot;ErrorResponse&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;required&quot;: [
          &quot;Error&quot;
        ],
        &quot;properties&quot;: {
          &quot;Error&quot;: {
            &quot;type&quot;: &quot;object&quot;,
            &quot;properties&quot;: {
              &quot;errorCode&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;errorMessage&quot;: {
                &quot;type&quot;: &quot;string&quot;
              }
            }
          }
        }
      },
      &quot;Studies&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;total&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345
          },
          &quot;start&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;end&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 110
          },
          &quot;offset&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 0
          },
          &quot;limit&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;studies&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/ShortStudies&quot;
            }
          }
        }
      },
      &quot;ShortStudies&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;bayNumber&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;drugName&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Name of the Drug used in this Study&quot;
          },
          &quot;bspProjId&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Identifier of the Project linked to this Study&quot;
          },
          &quot;clinicalPlanNo&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Identifier of the Clinical Development Plan linked to this Study&quot;
          },
          &quot;clinicalPlanDesc&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Description of the Clinical Development Plan linked to this Study&quot;
          },
          &quot;studyId&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;a unique identifier to identify studies across all systems&quot;
          },
          &quot;studyShortDesc&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;A textual explanation of the project, with components, such as objectives or goals&quot;
          },
          &quot;isVeevaStudy&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Is this study present in Veeva?&quot;
          },
          &quot;activeStudy&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Filter the active trials&quot;
          },
          &quot;internalExternalFlag&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;medicalUnitCode&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Returns medical unit code&quot;
          },
          &quot;medicalUnitDesc&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Returns medical unit description&quot;
          }
        }
      },
      &quot;ShortStudy&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;bayNumber&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;drugName&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Name of the Drug used in this Study&quot;
          },
          &quot;bspProjId&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Identifier of the Project linked to this Study&quot;
          },
          &quot;clinicalPlanNo&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Identifier of the Clinical Development Plan linked to this Study&quot;
          },
          &quot;clinicalPlanDesc&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Description of the Clinical Development Plan linked to this Study&quot;
          },
          &quot;studyId&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;a unique identifier to identify studies across all systems&quot;
          },
          &quot;studyShortDesc&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;A textual explanation of the project, with components, such as objectives or goals&quot;
          },
          &quot;isVeevaStudy&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Is this study present in Veeva?&quot;
          },
          &quot;activeStudy&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Filter the active trials&quot;
          }
        }
      },
      &quot;Study&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;study&quot;: {
            &quot;type&quot;: &quot;object&quot;,
            &quot;allOf&quot;: [
              {
                &quot;$ref&quot;: &quot;#/components/schemas/StudyObj&quot;
              }
            ]
          }
        }
      },
      &quot;StudyObj&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;allOf&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/schemas/ShortStudy&quot;
          },
          {
            &quot;properties&quot;: {
              &quot;displayStudyId&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;owner&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;stage&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;title&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;entryDate&quot;: {
                &quot;type&quot;: &quot;string&quot;,
                &quot;format&quot;: &quot;date-time&quot;,
                &quot;example&quot;: &quot;2021-01-30T08:30:00Z&quot;,
                &quot;nullable&quot;: true
              },
              &quot;studyType&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;phaseDesc&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;multiNational&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;countriesPlanned&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;therapeuticGroup&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;primaryInvestName&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;numberOfSites&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;trialUnitsPlanned&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;numberOfPatients&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;numberOfPatientsComplete&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;startDate&quot;: {
                &quot;type&quot;: &quot;string&quot;,
                &quot;format&quot;: &quot;date-time&quot;,
                &quot;example&quot;: &quot;2021-01-30T08:30:00Z&quot;,
                &quot;nullable&quot;: true
              },
              &quot;completeDate&quot;: {
                &quot;type&quot;: &quot;string&quot;,
                &quot;format&quot;: &quot;date-time&quot;,
                &quot;example&quot;: &quot;2021-01-30T08:30:00Z&quot;,
                &quot;nullable&quot;: true
              },
              &quot;studyAliasCode&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;specialName&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;screeningDuration&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;screeningDurationUnit&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;baselineDuration&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;baselineDurationUnit&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;treatmentDuration&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;treatmentDurationUnit&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;numberOfTreatmentArms&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;followUpDuration&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;followUpDurationUnit&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;protocolTitle&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;geographicalRegionCode&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;protocolVersionNo&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;indication&quot;: {
                &quot;type&quot;: &quot;array&quot;,
                &quot;items&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/IndicationObject&quot;
                }
              },
              &quot;dataCollectionMethod&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;bmFlag&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;bmCount&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;bmComment&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;pkFlag&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;pkCount&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;pkComment&quot;: {
                &quot;type&quot;: &quot;string&quot;
              }
            }
          }
        ]
      },
      &quot;IndicationObject&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;indicationGroupDesc&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;indicationDesc&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          }
        }
      },
      &quot;writeAPISuccessResponse&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;response&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/writeAPIResponse&quot;
            }
          }
        }
      },
      &quot;writeAPIResponse&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;message&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Role - CLM has been assigned to 1234&quot;
          }
        }
      },
      &quot;writeAPIUpateResponse&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;response&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUpdateResponse&quot;
            }
          }
        }
      },
      &quot;writeAPIUpdateResponse&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;message&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Record has been updated for 1234&quot;
          }
        }
      },
      &quot;writeAPIDelResponse&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;response&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/writeAPIDeleteResponse&quot;
            }
          }
        }
      },
      &quot;writeAPIDeleteResponse&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;message&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Role - RES has been reduced for 1234&quot;
          }
        }
      },
      &quot;writeAPIUnathResponse&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;response&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/writeAPIUnauthorizedResponse&quot;
            }
          }
        }
      },
      &quot;writeAPIUnauthorizedResponse&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;message&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;ABCDE - is not an Impact User. No action granted&quot;
          }
        }
      },
      &quot;writeAPIEthicalApprovalResponse&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;message&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Trial IRB/IEC Level Successfully updated in IMPACT&quot;
          }
        }
      },
      &quot;writeAPIEventsResponse&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;response&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/writeAPIEventResponse&quot;
            }
          }
        }
      },
      &quot;writeAPIEventResponse&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;message&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Planned and Actual Date successfully updated in IMPACT for event 1234&quot;
          }
        }
      },
      &quot;writeAPIConfimflgResponse&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;response&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/writeAPIConfirmFlagResponse&quot;
            }
          }
        }
      },
      &quot;writeAPIConfirmFlagResponse&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;message&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Trial Unit Confirm Flag successfully updated in IMPACT&quot;
          }
        }
      },
      &quot;writeAPIRefDataBp201Response&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;message&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;New Bayer Personnel added successfully!&quot;
          },
          &quot;Personnel_No&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345
          }
        }
      },
      &quot;writeAPIRefDataCp201Response&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;message&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;New Clinical Personnel added successfully!&quot;
          },
          &quot;Personnel_No&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345
          }
        }
      },
      &quot;writeAPIRefDataNC201Response&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;message&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;New Centre created successfully!&quot;
          },
          &quot;Centre_No&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345
          }
        }
      },
      &quot;writeAPIRefDataNS201Response&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;message&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;New Unit added successfully to trial!&quot;
          },
          &quot;Unit_No&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345
          }
        }
      },
      &quot;writeAPIinvDeleteResponse&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;message&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Primary Investigator deleted successfully&quot;
          }
        }
      },
      &quot;Events&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;total&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345
          },
          &quot;start&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;end&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 110
          },
          &quot;offset&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 0
          },
          &quot;limit&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;events&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;description&quot;: &quot;study-level activities&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/Event&quot;
            }
          }
        }
      },
      &quot;Event&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;eventNo&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;eventDesc&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;actualDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;example&quot;: &quot;2021-01-30T08:30:00Z&quot;,
            &quot;nullable&quot;: true
          },
          &quot;baselineDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;example&quot;: &quot;2021-01-30T08:30:00Z&quot;,
            &quot;nullable&quot;: true
          },
          &quot;originalDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;example&quot;: &quot;2021-01-30T08:30:00Z&quot;,
            &quot;nullable&quot;: true
          },
          &quot;plannedDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;example&quot;: &quot;2021-01-30T08:30:00Z&quot;,
            &quot;nullable&quot;: true
          },
          &quot;lastUpdatedDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;example&quot;: &quot;2021-01-30T08:30:00Z&quot;,
            &quot;nullable&quot;: true
          }
        }
      },
      &quot;PersonnelObj&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;personnel&quot;: {
            &quot;type&quot;: &quot;object&quot;,
            &quot;allOf&quot;: [
              {
                &quot;$ref&quot;: &quot;#/components/schemas/Personnel&quot;
              }
            ]
          }
        }
      },
      &quot;PersonnelCollection&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;total&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345
          },
          &quot;start&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;end&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 110
          },
          &quot;offset&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 0
          },
          &quot;limit&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;personnel&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/Personnel&quot;
            }
          }
        }
      },
      &quot;PersonnelCollectionOccupation&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;total&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345
          },
          &quot;start&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;end&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 110
          },
          &quot;offset&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 0
          },
          &quot;limit&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;personnel&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/Personnel&quot;
            }
          }
        }
      },
      &quot;StudyAllPersonnelCollection&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;total&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345
          },
          &quot;personnel&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/StudyAllPersonnel&quot;
            }
          }
        }
      },
      &quot;StudyAllPersonnel&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;studiesPersonnel&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/studiesPersonnel&quot;
            }
          },
          &quot;countriesPersonnel&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/countriesPersonnel&quot;
            }
          },
          &quot;sitesPersonnel&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/sitesPersonnel&quot;
            }
          }
        }
      },
      &quot;studiesPersonnel&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;allOf&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/schemas/allPersonnel&quot;
          },
          {
            &quot;properties&quot;: {
              &quot;copiedFromClinicalPlan&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;medicalUnitCode&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;medicalUnitDesc&quot;: {
                &quot;type&quot;: &quot;string&quot;
              }
            }
          }
        ]
      },
      &quot;countriesPersonnel&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;allOf&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/schemas/allPersonnel&quot;
          },
          {
            &quot;properties&quot;: {
              &quot;copiedFromClinicalPlan&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;copiedFromTrial&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;medicalUnitCode&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;medicalUnitDesc&quot;: {
                &quot;type&quot;: &quot;string&quot;
              }
            }
          }
        ]
      },
      &quot;sitesPersonnel&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;allOf&quot;: [
          {
            &quot;$ref&quot;: &quot;#/components/schemas/allPersonnel&quot;
          },
          {
            &quot;properties&quot;: {
              &quot;copiedFromClinicalPlan&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;copiedFromTrial&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;copiedFromTrialCountry&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;medicalUnitCode&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;medicalUnitDesc&quot;: {
                &quot;type&quot;: &quot;string&quot;
              }
            }
          }
        ]
      },
      &quot;allPersonnel&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;occupationCode&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;occupationDesc&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;identifier&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;username&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;title&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;firstName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;middleName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;emailAddress&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;email&quot;,
            &quot;nullable&quot;: true
          },
          &quot;startDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;nullable&quot;: true,
            &quot;example&quot;: &quot;2021-01-30T08:30:00Z&quot;
          },
          &quot;endDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;nullable&quot;: true,
            &quot;example&quot;: &quot;2021-01-30T08:30:00Z&quot;
          },
          &quot;sequenceNo&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;personnelType&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastUpdatedDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;nullable&quot;: true,
            &quot;example&quot;: &quot;2021-01-30T08:30:00Z&quot;
          },
          &quot;discontinuedFlag&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;internalExternalFlag&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }
      },
      &quot;Personnel&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;occupationCode&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;occupationDesc&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;identifier&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;username&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;title&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;firstName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;middleName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;emailAddress&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;email&quot;,
            &quot;nullable&quot;: true
          },
          &quot;startDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;nullable&quot;: true,
            &quot;example&quot;: &quot;2021-01-30T08:30:00Z&quot;
          },
          &quot;endDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;nullable&quot;: true,
            &quot;example&quot;: &quot;2021-01-30T08:30:00Z&quot;
          },
          &quot;sequenceNo&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastUpdatedDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;nullable&quot;: true,
            &quot;example&quot;: &quot;2021-01-30T08:30:00Z&quot;
          },
          &quot;discontinuedFlag&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;internalExternalFlag&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;medicalUnitCode&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;medicalUnitDesc&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }
      },
      &quot;StudyRecruitment&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;totalPatientsPlannedStudy&quot;: {
            &quot;description&quot;: &quot;total number of patients planned for the whole study or country&quot;,
            &quot;type&quot;: &quot;integer&quot;
          },
          &quot;totalPatientsActualStudy&quot;: {
            &quot;description&quot;: &quot;total number of patients actual to that timepoint&quot;,
            &quot;type&quot;: &quot;integer&quot;
          },
          &quot;totalPatientsPlannedTreatment&quot;: {
            &quot;description&quot;: &quot;total number of patients planned for the treatment&quot;,
            &quot;type&quot;: &quot;integer&quot;
          },
          &quot;totalPatientsActualTreatment&quot;: {
            &quot;description&quot;: &quot;total number of patients actual have bean treated&quot;,
            &quot;type&quot;: &quot;integer&quot;
          },
          &quot;recruitmentPlan&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/RecruitmentPlan&quot;
            }
          }
        }
      },
      &quot;RecruitmentPlan&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;patientsPlannedStudy&quot;: {
            &quot;description&quot;: &quot;number of patients planned for the whole study&quot;,
            &quot;type&quot;: &quot;integer&quot;
          },
          &quot;patientsActualStudy&quot;: {
            &quot;description&quot;: &quot;number of patients actual to that timepoint&quot;,
            &quot;type&quot;: &quot;integer&quot;
          },
          &quot;patientsPlannedTreatment&quot;: {
            &quot;description&quot;: &quot;number of patients planned for the treatment&quot;,
            &quot;type&quot;: &quot;integer&quot;
          },
          &quot;patientsActualTreatment&quot;: {
            &quot;description&quot;: &quot;number of patients actual for the treatment&quot;,
            &quot;type&quot;: &quot;integer&quot;
          },
          &quot;periodEndDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;example&quot;: &quot;2021-01-30T08:30:00Z&quot;,
            &quot;nullable&quot;: true
          }
        }
      },
      &quot;StudySiteRecruitment&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;totalPatientsPlannedStudy&quot;: {
            &quot;description&quot;: &quot;total number of patients planned for the whole study or country&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;totalPatientsActualStudy&quot;: {
            &quot;description&quot;: &quot;total number of patients actual to that timepoint&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;totalPatientsPlannedTreatment&quot;: {
            &quot;description&quot;: &quot;total number of patients planned for the treatment&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;totalPatientsActualTreatment&quot;: {
            &quot;description&quot;: &quot;total number of patients actual have bean treated&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;totalPatientsTreatmentOngoing&quot;: {
            &quot;description&quot;: &quot;total number of patients with treatment ongoing&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;totalPatientsFollowUp&quot;: {
            &quot;description&quot;: &quot;total number of patients that have followedup after trial&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;totalDropOut&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/SiteTotalDropOut&quot;
          },
          &quot;recruitmentPlan&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/SiteRecruitmentPlan&quot;
            }
          }
        }
      },
      &quot;SiteTotalDropOut&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;consentWithdrawn&quot;: {
            &quot;description&quot;: &quot;number of drop out patients who has withdrawn with concent&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;screeningFailure&quot;: {
            &quot;description&quot;: &quot;number of patients who had failed screening&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;other&quot;: {
            &quot;description&quot;: &quot;number of all other drop out patients&quot;,
            &quot;type&quot;: &quot;string&quot;
          }
        }
      },
      &quot;SiteRecruitmentPlan&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;startDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;nullable&quot;: true,
            &quot;example&quot;: &quot;2021-01-30T08:30:00Z&quot;
          },
          &quot;periodEndDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;nullable&quot;: true,
            &quot;example&quot;: &quot;2021-01-30T08:30:00Z&quot;
          },
          &quot;patientsPlannedStudy&quot;: {
            &quot;description&quot;: &quot;number of patients planned for the whole study&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;patientsActualStudy&quot;: {
            &quot;description&quot;: &quot;number of patients actual to that timepoint&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;patientsPlannedTreatment&quot;: {
            &quot;description&quot;: &quot;number of patients planned for the treatment&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;patientsActualTreatment&quot;: {
            &quot;description&quot;: &quot;number of patients actual for the treatment&quot;,
            &quot;type&quot;: &quot;string&quot;
          }
        }
      },
      &quot;SitesObj&quot;: {
        &quot;type&quot;: &quot;array&quot;,
        &quot;items&quot;: {
          &quot;$ref&quot;: &quot;#/components/schemas/StudyIdSiteId&quot;
        }
      },
      &quot;SitesCountry&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;total&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345
          },
          &quot;start&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;end&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 110
          },
          &quot;offset&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 0
          },
          &quot;limit&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;sites&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/StudyIdSiteId&quot;
            }
          }
        }
      },
      &quot;Sites&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;sites&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/StudySite&quot;
            }
          }
        }
      },
      &quot;AllOccupationsCollection&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;total&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345
          },
          &quot;start&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: &quot;10&quot;
          },
          &quot;end&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 110
          },
          &quot;offset&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 0
          },
          &quot;limit&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;occupations&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/AllOccupations&quot;
            }
          }
        }
      },
      &quot;AllOccupations&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;occupationCode&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;occupationDesc&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;discontinuedFlag&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;occupationType&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }
      },
      &quot;AllMedicalUnitCollection&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;total&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345
          },
          &quot;start&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;end&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 110
          },
          &quot;offset&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 0
          },
          &quot;limit&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;medicalUnits&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/AllMedicalUnit&quot;
            }
          }
        }
      },
      &quot;AllMedicalUnit&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;medicalUnitCode&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;medicalUnitDesc&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;discontinuedflag&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;internalExternalFlag&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }
      },
      &quot;AllBayerPersonnelCollection&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;total&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345
          },
          &quot;start&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;end&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 110
          },
          &quot;offset&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 0
          },
          &quot;limit&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;allBayerPersonnel&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/AllBayerPersonnel&quot;
            }
          }
        }
      },
      &quot;AllBayerPersonnel&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;identifier&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: &quot;10&quot;
          },
          &quot;title&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Mr.&quot;
          },
          &quot;firstName&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Max&quot;
          },
          &quot;middleName&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;&quot;
          },
          &quot;lastName&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Muester&quot;
          },
          &quot;initials&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;MM&quot;
          },
          &quot;emailAddress&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;max.muester@bayer.com&quot;
          },
          &quot;internalExternalFlag&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;I&quot;
          },
          &quot;lastUpdatedDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date&quot;,
            &quot;example&quot;: &quot;10-05-2021&quot;
          },
          &quot;discontinuedFlag&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Y&quot;
          }
        }
      },
      &quot;AllClinicalPersonnelCollection&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;total&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345
          },
          &quot;start&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;end&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 110
          },
          &quot;offset&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 0
          },
          &quot;limit&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;allClinicalPersonnel&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/AllClinicalPersonnel&quot;
            }
          }
        }
      },
      &quot;AllClinicalPersonnel&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;identifier&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: &quot;10&quot;
          },
          &quot;title&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Mr.&quot;
          },
          &quot;firstName&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Max&quot;
          },
          &quot;middleName&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;&quot;
          },
          &quot;lastName&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Muester&quot;
          },
          &quot;emailAddress&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;max.muester@bayer.com&quot;
          },
          &quot;lastUpdatedDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date&quot;,
            &quot;example&quot;: &quot;10-05-2021&quot;
          },
          &quot;discontinuedFlag&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Y&quot;
          }
        }
      },
      &quot;AllCentreCollection&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;total&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345
          },
          &quot;start&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;end&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 110
          },
          &quot;offset&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 0
          },
          &quot;limit&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;allCentre&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/AllCentre&quot;
            }
          }
        }
      },
      &quot;AllCentre&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;centreNumber&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: &quot;10&quot;
          },
          &quot;centreName&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Test Centre&quot;
          },
          &quot;centreTypeCode&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;100&quot;
          },
          &quot;centreShortName&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;TC&quot;
          },
          &quot;purposeCode&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;110&quot;
          },
          &quot;lastUpdatedDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date&quot;,
            &quot;example&quot;: &quot;10-05-2021&quot;
          },
          &quot;discontinuedFlag&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Y&quot;
          }
        }
      },
      &quot;StudySite&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;siteId&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Site taking part in the Study&quot;
          },
          &quot;countryCode&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;countryName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;primaryCenterName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;primaryCenterLocation&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;primaryInvestigator&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/StudySitePerson&quot;
          },
          &quot;status&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;statusDescription&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;canceled&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;hold&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;updated&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;example&quot;: &quot;2021-01-30T08:30:00Z&quot;
          }
        }
      },
      &quot;StudyIdSiteId&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;siteId&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Site taking part in the Study&quot;
          },
          &quot;countryCode&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;countryName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;primaryCenterName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;primaryCenterLocation&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;primaryInvestigator&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/StudySitePerson&quot;
          },
          &quot;status&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;statusDescription&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;allPatientsSetup&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;canceled&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;hold&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;updated&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;example&quot;: &quot;2021-01-30T08:30:00Z&quot;,
            &quot;nullable&quot;: true
          }
        }
      },
      &quot;StudySitePerson&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;identifier&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;title&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;firstName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;middleName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;emailAddress&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;email&quot;,
            &quot;nullable&quot;: true
          },
          &quot;internal&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;updated&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;example&quot;: &quot;2021-01-30T08:30:00Z&quot;,
            &quot;nullable&quot;: true
          }
        }
      },
      &quot;Person&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;identifier&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;username&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;title&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;firstName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;middleName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;emailAddress&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;email&quot;,
            &quot;nullable&quot;: true
          },
          &quot;internal&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;clinicalPersonnel&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;medicalUnitCode&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;medicalUnitDesc&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;studies&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;studyID&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;occupationCode&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;sequenceNo&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          },
          &quot;lastUpdatedDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;example&quot;: &quot;2021-01-30T08:30:00Z&quot;,
            &quot;nullable&quot;: true
          }
        }
      },
      &quot;Country&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;countryCode&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;pattern&quot;: &quot;[A-Z]{2}&quot;
          },
          &quot;countryName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }
      },
      &quot;Countrywithfilter&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;countryCode&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;pattern&quot;: &quot;[A-Z]{2}&quot;
          },
          &quot;countryName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;activeStudyCountry&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;is trials active in the country?&quot;
          }
        }
      },
      &quot;Countries&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;total&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345
          },
          &quot;start&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;end&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 110
          },
          &quot;offset&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 0
          },
          &quot;limit&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;countries&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/Countrywithfilter&quot;
            }
          }
        }
      },
      &quot;CountryCodeInfo&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;statusEventNo&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;countryCode&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;countryName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;countryStage&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;cancelStopFlag&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;primaryInvestigatorName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;sitesCount&quot;: {
            &quot;type&quot;: &quot;object&quot;,
            &quot;properties&quot;: {
              &quot;numberOfSites&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;trialUnitsPlanned&quot;: {
                &quot;type&quot;: &quot;string&quot;
              }
            }
          },
          &quot;subjectCount&quot;: {
            &quot;type&quot;: &quot;object&quot;,
            &quot;properties&quot;: {
              &quot;numberOfPatientsPlanned&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;numberOfPatientsActual&quot;: {
                &quot;type&quot;: &quot;string&quot;
              }
            }
          }
        }
      },
      &quot;ActiveSubstance&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;identifier&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;a unique identifier to identify the active substance across all systems&quot;,
            &quot;example&quot;: &quot;BAY1251152&quot;
          },
          &quot;studies&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          }
        }
      },
      &quot;Projects&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;trials&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/Project&quot;
            }
          }
        }
      },
      &quot;Project&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;identifier&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;a unique identifier to identify projects across all systems&quot;,
            &quot;example&quot;: 480510
          },
          &quot;studies&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          }
        }
      },
      &quot;StudyProtocol&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;title&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Describes the name of the Study Protocol&quot;
          },
          &quot;dataCollectionMethod&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;studies&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          }
        }
      },
      &quot;SubResourceLink&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Sur-resource name&quot;
          },
          &quot;href&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;link to the subresource&quot;
          }
        }
      },
      &quot;Persons&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;total&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345
          },
          &quot;start&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;end&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 110
          },
          &quot;offset&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 0
          },
          &quot;limit&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;personnel&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/Person&quot;
            }
          }
        }
      },
      &quot;StudySiteId&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;siteId&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Site taking part in the Study&quot;
          },
          &quot;studyId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;countryCode&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;countryName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;primaryCenterName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;primaryCenterLocation&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;primaryInvestigator&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/StudySitePerson&quot;
          },
          &quot;healthCareFacility&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/HealthcareFacility&quot;
          },
          &quot;status&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;statusDescription&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;allPatientsSetup&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;canceled&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;hold&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;updated&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;example&quot;: &quot;2021-01-30T08:30:00Z&quot;,
            &quot;nullable&quot;: true
          }
        }
      },
      &quot;HealthcareFacility&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;identifier&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;address&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;city&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;state&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;postalCode&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }
      },
      &quot;TherapeuticArea&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;code&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Code consisting of 3-Letters for each Therapeutic Area&quot;,
            &quot;example&quot;: &quot;ONC&quot;
          },
          &quot;description&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Full name descrining the Therapeutic Area&quot;,
            &quot;example&quot;: &quot;Oncology&quot;
          },
          &quot;discontinued&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;studies&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          },
          &quot;updated&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;description&quot;: &quot;Timestamp of the last update in Impact&quot;,
            &quot;example&quot;: &quot;2019-04-23T18:25:00.000Z&quot;
          }
        }
      },
      &quot;ClinicalDevelopmentPlan&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;identifier&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;a unique identifier to identify the Clinical Development Plan across all systems&quot;,
            &quot;example&quot;: 1208
          },
          &quot;description&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;BAY1251152/ICPP/01&quot;
          },
          &quot;alias&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;BAY1251152/GCP/01&quot;
          },
          &quot;status&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: 120
          },
          &quot;type&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;ICDP&quot;
          },
          &quot;organization&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;therapeuticArea&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;studies&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          },
          &quot;created&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;description&quot;: &quot;Timestamp of when the ressource was created in Impact&quot;,
            &quot;example&quot;: &quot;2019-04-23T18:25:00.000Z&quot;
          },
          &quot;updated&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;description&quot;: &quot;Timestamp of the last update in Impact&quot;,
            &quot;example&quot;: &quot;2019-04-23T18:25:00.000Z&quot;
          }
        }
      },
      &quot;Drug&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;BAY 864873, Gadoxetate disodium Gd-EOB-DTPA&quot;
          },
          &quot;studies&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          }
        }
      },
      &quot;PersonStudyOccupation&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;total&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345
          },
          &quot;start&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;end&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 110
          },
          &quot;offset&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 0
          },
          &quot;limit&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;studies&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/ShortStudy&quot;
            }
          }
        }
      },
      &quot;OccupationStudy&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;id&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }
      },
      &quot;PersonStudyCountryOccupation&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;total&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345
          },
          &quot;start&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;end&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 110
          },
          &quot;offset&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 0
          },
          &quot;limit&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;studies&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/OccupationStudyCountry&quot;
            }
          }
        }
      },
      &quot;OccupationStudyCountry&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;studyId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;countries&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/OccupationCountry&quot;
            }
          }
        }
      },
      &quot;OccupationCountry&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;countryCode&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }
      },
      &quot;StudyObject&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;identifier&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;a unique identifier to identify studies across all systems&quot;
          },
          &quot;bayNumber&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;drugName&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Name of the Drug used in this Study&quot;
          },
          &quot;title&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;bspProjId&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Identifyer of the Project linked to this Study&quot;
          },
          &quot;clinicalPlanNo&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Identifyer of the Clinical Development Plan linked to this Study&quot;
          },
          &quot;clinicalPlanDesc&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Description of the Clinical Development Plan linked to this Study&quot;
          },
          &quot;studyShortDesc&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;A textual explanation of the project, with components, such as objectives or goals&quot;
          },
          &quot;activeStudy&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;This flag indicates whether a study is active  (Y) or inactive (N).&quot;
          },
          &quot;sites&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/SiteObject&quot;
            }
          }
        }
      },
      &quot;PersonObject&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;identifier&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;title&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;firstName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;middleName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;emailAddress&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;email&quot;,
            &quot;nullable&quot;: true
          },
          &quot;internal&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;updated&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;example&quot;: &quot;2021-01-30T08:30:00Z&quot;,
            &quot;nullable&quot;: true
          }
        }
      },
      &quot;SiteObject&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;identifier&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Site taking part in the Study&quot;
          },
          &quot;primaryCenterName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;primaryCenterLocation&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;country&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;primaryInvestigator&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/PersonObject&quot;
          },
          &quot;status&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;statusDescription&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;allPatientsSetup&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;canceled&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;hold&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;updated&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;example&quot;: &quot;2021-01-30T08:30:00Z&quot;,
            &quot;nullable&quot;: true
          }
        }
      },
      &quot;PersonStudySiteOccupation&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;total&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345
          },
          &quot;start&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;end&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 110
          },
          &quot;offset&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 0
          },
          &quot;limit&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;studies&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/StudyObject&quot;
            }
          }
        }
      },
      &quot;AllSites&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;total&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345
          },
          &quot;start&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;end&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 110
          },
          &quot;offset&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 0
          },
          &quot;limit&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;sites&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/PersonelSite&quot;
            }
          }
        }
      },
      &quot;PersonelNum&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;personnelNumber&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345
          },
          &quot;email&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;abc@bayer.com&quot;
          }
        }
      },
      &quot;PersonelSites&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;total&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345
          },
          &quot;start&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;end&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 110
          },
          &quot;offset&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 0
          },
          &quot;limit&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;sites&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/PersonelSite&quot;
            }
          }
        }
      },
      &quot;PersonelSite&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;studyId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;studyTitle&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;countryId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;countryName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;siteId&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Site taking part in the Study&quot;
          },
          &quot;primaryCenterName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;primaryCenterLocation&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;primaryInvestigator&quot;: {
            &quot;type&quot;: &quot;object&quot;,
            &quot;properties&quot;: {
              &quot;identifier&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;firstName&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;lastName&quot;: {
                &quot;type&quot;: &quot;string&quot;
              }
            }
          },
          &quot;status&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;statusDescription&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;allPatientsSetup&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;canceled&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;hold&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;updated&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;example&quot;: &quot;2021-01-30T08:30:00Z&quot;,
            &quot;nullable&quot;: true
          },
          &quot;trialUnitReference&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;12345&quot;
          }
        }
      },
      &quot;StudyLocations&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;total&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345
          },
          &quot;start&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;end&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 110
          },
          &quot;offset&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 0
          },
          &quot;limit&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;example&quot;: 10
          },
          &quot;studies&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/StudyLocation&quot;
            }
          }
        }
      },
      &quot;specification&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;example&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;openapi 3.0.1 info title Impact Rest APIs&quot;
          }
        }
      },
      &quot;StudyLocation&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;description&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;identifier&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;alias&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;projectId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;therapeuticAreaId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;activeSubstanceId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;clinicalDevPlanId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;clinicalDevPlanDesc&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;drugName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;isVeevaStudy&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Is this study present in Veeva?&quot;
          }
        }
      },
      &quot;Metadata&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;paging&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/Pagination&quot;
          }
        }
      },
      &quot;Pagination&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;start&quot;: {
            &quot;description&quot;: &quot;the index of the first item in the fetched list&quot;,
            &quot;type&quot;: &quot;integer&quot;,
            &quot;format&quot;: &quot;int32&quot;
          },
          &quot;end&quot;: {
            &quot;description&quot;: &quot;the index of the last item in the fetched list&quot;,
            &quot;type&quot;: &quot;integer&quot;,
            &quot;format&quot;: &quot;int32&quot;
          },
          &quot;total&quot;: {
            &quot;description&quot;: &quot;The total number of resources available&quot;,
            &quot;type&quot;: &quot;integer&quot;,
            &quot;format&quot;: &quot;int64&quot;
          },
          &quot;offset&quot;: {
            &quot;description&quot;: &quot;The current offset&quot;,
            &quot;type&quot;: &quot;integer&quot;,
            &quot;format&quot;: &quot;int32&quot;
          }
        }
      },
      &quot;studyRoleAssigment&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;copyToAllStudyCountries&quot;: {
            &quot;description&quot;: &quot;If true ? Personnel will be copied to all countries at trial level&quot;,
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;copyToAllStudySites&quot;: {
            &quot;description&quot;: &quot;If true ? Personnel will be copied to all sites at trial site level;&quot;,
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;startDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: false
          },
          &quot;endDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: false
          }
        }
      },
      &quot;updStudyRoleAssigment&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;copyToAllStudyCountries&quot;: {
            &quot;description&quot;: &quot;If true ? Personnel will be copied to all countries at trial level&quot;,
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;copyToAllStudySites&quot;: {
            &quot;description&quot;: &quot;If true ? Personnel will be copied to all sites at trial site level;&quot;,
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;startDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date&quot;
          },
          &quot;endDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date&quot;
          }
        }
      },
      &quot;ethicalApproval&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;ethicalApprovalLevel&quot;: {
            &quot;description&quot;: &quot;If &apos;U&apos; then Trail Unit IRB/IEC updated, If &apos;Y&apos; then Trial Country IRB/IEC updated, if &apos;D&apos; then Both- Trial Country and Trial Unit IRB/IEC updated&quot;,
            &quot;type&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;U&quot;,
            &quot;format&quot;: &quot;&quot;,
            &quot;nullable&quot;: false
          }
        }
      },
      &quot;studyEventDates&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;originalDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date&quot;
          },
          &quot;baselineFlag&quot;: {
            &quot;type&quot;: &quot;boolean&quot;,
            &quot;nullable&quot;: false
          },
          &quot;baselineDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date&quot;
          },
          &quot;plannedDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date&quot;
          },
          &quot;actualDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date&quot;
          },
          &quot;copiedToTrc&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;copiedToUgp&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;copiedToTu&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          }
        }
      },
      &quot;studyCountryEventDates&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;originalDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date&quot;
          },
          &quot;baselineFlag&quot;: {
            &quot;type&quot;: &quot;boolean&quot;,
            &quot;nullable&quot;: false
          },
          &quot;baselineDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date&quot;
          },
          &quot;plannedDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date&quot;
          },
          &quot;actualDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date&quot;
          },
          &quot;copiedToUgp&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;copiedToTu&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          }
        }
      },
      &quot;studySiteEventDates&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;originalDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date&quot;
          },
          &quot;baselineFlag&quot;: {
            &quot;type&quot;: &quot;boolean&quot;,
            &quot;nullable&quot;: false
          },
          &quot;baselineDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date&quot;
          },
          &quot;plannedDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date&quot;
          },
          &quot;actualDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date&quot;
          }
        }
      },
      &quot;countryRoleAssigment&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;copyToAllStudySites&quot;: {
            &quot;description&quot;: &quot;If true ? Personnel will be copied to all sites at trial site level;&quot;,
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;startDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: false
          },
          &quot;endDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: false
          }
        }
      },
      &quot;updCountryRoleAssigment&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;copyToAllStudySites&quot;: {
            &quot;description&quot;: &quot;If true ? Personnel will be copied to all sites at trial site level;&quot;,
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;startDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date&quot;
          },
          &quot;endDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date&quot;
          }
        }
      },
      &quot;creationOfSite&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;siteId&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;format&quot;: &quot;int32&quot;
          },
          &quot;trialUnitReference&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;primaryInvestigator&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;primaryCenter&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;purpose&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;managingMedicalUnit&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;updatingMedicalUnit&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;patientAllSetupFlag&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;patientMonitoringFlag&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;rollUpRolldownPlannedFig&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;docCollectionIndicator&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;confirmedFlag&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;cancelStopFlag&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;distributionTransferFlag&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;holdFlag&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;trialUnitStatus&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }
      },
      &quot;updationOfSite&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;trialUnitReference&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;primaryInvestigator&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;primaryCenter&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;purpose&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;managingMedicalUnit&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;updatingMedicalUnit&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;patientAllSetupFlag&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;patientMonitoringFlag&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;rollUpRolldownPlannedFig&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;docCollectionIndicator&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;confirmedFlag&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;cancelStopFlag&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;distributionTransferFlag&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;holdFlag&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;trialUnitStatus&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }
      },
      &quot;updationOfSiteConfirmedFlag&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;confirmedStudySiteFlag&quot;: {
            &quot;type&quot;: &quot;boolean&quot;,
            &quot;nullable&quot;: false
          }
        }
      },
      &quot;siteRoleAssigment&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;startDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: false
          },
          &quot;endDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: false
          }
        }
      },
      &quot;updSiteRoleAssigment&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;startDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date&quot;
          },
          &quot;endDate&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;date&quot;
          }
        }
      },
      &quot;bayerPersonnel&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;title&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Mr&quot;,
            &quot;nullable&quot;: false
          },
          &quot;initials&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;MM&quot;,
            &quot;nullable&quot;: false
          },
          &quot;surName&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Abc&quot;,
            &quot;nullable&quot;: false
          },
          &quot;emailAddress&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;abc@mail.com&quot;,
            &quot;nullable&quot;: false
          },
          &quot;trialRoleCode&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;MSG&quot;,
            &quot;nullable&quot;: false
          },
          &quot;medicalUnitCode&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;BAR&quot;,
            &quot;nullable&quot;: false
          },
          &quot;securityRoleCode&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;DBA&quot;,
            &quot;nullable&quot;: false
          },
          &quot;internalExternalFlag&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;I&quot;,
            &quot;nullable&quot;: true
          },
          &quot;accessSecurityFlag&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;U&quot;,
            &quot;nullable&quot;: true
          }
        }
      },
      &quot;updBayerPersonnel&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;title&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Mr&quot;,
            &quot;nullable&quot;: true
          },
          &quot;initials&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;MM&quot;,
            &quot;nullable&quot;: true
          },
          &quot;surName&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Abc&quot;,
            &quot;nullable&quot;: true
          },
          &quot;emailAddress&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;abc@mail.com&quot;,
            &quot;nullable&quot;: true
          },
          &quot;trialRoleCode&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;MSG&quot;,
            &quot;nullable&quot;: true
          },
          &quot;medicalUnitCode&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;BAR&quot;,
            &quot;nullable&quot;: true
          },
          &quot;securityRoleCode&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;DBA&quot;,
            &quot;nullable&quot;: true
          },
          &quot;internalExternalFlag&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;I&quot;,
            &quot;nullable&quot;: true
          },
          &quot;accessSecurityFlag&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;U&quot;,
            &quot;nullable&quot;: true
          },
          &quot;discontinuedFlag&quot;: {
            &quot;type&quot;: &quot;boolean&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: true,
            &quot;nullable&quot;: true
          },
          &quot;foreName&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Jon&quot;,
            &quot;nullable&quot;: true
          },
          &quot;middleName&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Jeff&quot;,
            &quot;nullable&quot;: true
          },
          &quot;primaryAddress&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Abc&quot;,
            &quot;nullable&quot;: true
          },
          &quot;addressLine2&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;abc&quot;,
            &quot;nullable&quot;: true
          },
          &quot;addressLine3&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;abc&quot;,
            &quot;nullable&quot;: true
          },
          &quot;addressLine4&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;abc&quot;,
            &quot;nullable&quot;: true
          },
          &quot;addressTypeCode&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;2&quot;,
            &quot;nullable&quot;: true
          },
          &quot;townCity&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Abc&quot;,
            &quot;nullable&quot;: true
          },
          &quot;countryCode&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;US&quot;,
            &quot;nullable&quot;: true
          },
          &quot;postZipCode&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;12345&quot;,
            &quot;nullable&quot;: true
          },
          &quot;telephoneNo&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;0123-123456&quot;,
            &quot;nullable&quot;: true
          },
          &quot;faxNo&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;0123-456789&quot;,
            &quot;nullable&quot;: true
          }
        }
      },
      &quot;clinicalPersonnel&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;foreName&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Abc&quot;,
            &quot;nullable&quot;: false
          },
          &quot;surName&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Xyz&quot;,
            &quot;nullable&quot;: false
          },
          &quot;emailAddress&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;abc@mail.com&quot;,
            &quot;nullable&quot;: false
          },
          &quot;primaryAddress&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;abc&quot;,
            &quot;nullable&quot;: false
          },
          &quot;countryCode&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;AF&quot;,
            &quot;nullable&quot;: false
          },
          &quot;investigatorFlag&quot;: {
            &quot;type&quot;: &quot;boolean&quot;,
            &quot;format&quot;: &quot;boolean&quot;,
            &quot;nullable&quot;: true
          }
        }
      },
      &quot;updClinicalPersonnel&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;title&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Mr&quot;,
            &quot;nullable&quot;: true
          },
          &quot;middleName&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Jeff&quot;,
            &quot;nullable&quot;: true
          },
          &quot;foreName&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Abc&quot;,
            &quot;nullable&quot;: true
          },
          &quot;surName&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Xyz&quot;,
            &quot;nullable&quot;: true
          },
          &quot;emailAddress&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;abc@mail.com&quot;,
            &quot;nullable&quot;: true
          },
          &quot;investigatorFlag&quot;: {
            &quot;type&quot;: &quot;boolean&quot;,
            &quot;format&quot;: &quot;boolean&quot;,
            &quot;nullable&quot;: true
          },
          &quot;suffix&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Abc&quot;,
            &quot;nullable&quot;: true
          },
          &quot;discontinuedFlag&quot;: {
            &quot;type&quot;: &quot;boolean&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: true,
            &quot;nullable&quot;: true
          },
          &quot;primaryAddress&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;abc&quot;,
            &quot;nullable&quot;: true
          },
          &quot;addressLine2&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;abc&quot;,
            &quot;nullable&quot;: true
          },
          &quot;addressLine3&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;abc&quot;,
            &quot;nullable&quot;: true
          },
          &quot;addressLine4&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;abc&quot;,
            &quot;nullable&quot;: true
          },
          &quot;countryCode&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;US&quot;,
            &quot;nullable&quot;: true
          },
          &quot;addressTypeCode&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;1&quot;,
            &quot;nullable&quot;: true
          },
          &quot;townCity&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Abc&quot;,
            &quot;nullable&quot;: true
          },
          &quot;postZipCode&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;12345&quot;,
            &quot;nullable&quot;: true
          },
          &quot;telephoneNo&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;0123-123456&quot;,
            &quot;nullable&quot;: true
          },
          &quot;faxNo&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;0123-456789&quot;,
            &quot;nullable&quot;: true
          }
        }
      },
      &quot;refCentre&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;centreName&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Abc&quot;,
            &quot;nullable&quot;: false
          },
          &quot;centreShortName&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Def&quot;,
            &quot;nullable&quot;: false
          },
          &quot;centreTypeCode&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;160&quot;,
            &quot;nullable&quot;: false
          },
          &quot;countryCode&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;AF&quot;,
            &quot;nullable&quot;: false
          },
          &quot;purposeCode&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;150&quot;,
            &quot;nullable&quot;: false
          },
          &quot;primaryAddress&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Xyz&quot;,
            &quot;nullable&quot;: false
          }
        }
      },
      &quot;newStudySite&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;trialUnitReference&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;format&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345,
            &quot;nullable&quot;: true
          },
          &quot;primaryCentre&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;format&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345,
            &quot;nullable&quot;: true
          },
          &quot;primaryInvestigator&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;format&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345,
            &quot;nullable&quot;: true
          },
          &quot;confirmedFlag&quot;: {
            &quot;type&quot;: &quot;boolean&quot;,
            &quot;format&quot;: &quot;boolean&quot;,
            &quot;nullable&quot;: true
          }
        }
      },
      &quot;updStudySite&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;primaryInvestigator&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;format&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345,
            &quot;nullable&quot;: false,
            &quot;description&quot;: &quot;It will set given value or null to Primary Investigator&quot;
          },
          &quot;primaryCentre&quot;: {
            &quot;type&quot;: &quot;integer&quot;,
            &quot;format&quot;: &quot;integer&quot;,
            &quot;example&quot;: 12345,
            &quot;nullable&quot;: false
          }
        }
      },
      &quot;updCentre&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;centreName&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Abc&quot;,
            &quot;nullable&quot;: true
          },
          &quot;centreShortName&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Def&quot;,
            &quot;nullable&quot;: true
          },
          &quot;centreTypeCode&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;160&quot;,
            &quot;nullable&quot;: true
          },
          &quot;countryCode&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;AF&quot;,
            &quot;nullable&quot;: true
          },
          &quot;purposeCode&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;150&quot;,
            &quot;nullable&quot;: true
          },
          &quot;discontinuedFlag&quot;: {
            &quot;type&quot;: &quot;boolean&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: true,
            &quot;nullable&quot;: true
          },
          &quot;primaryAddress&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Xyz&quot;,
            &quot;nullable&quot;: true
          },
          &quot;addressLine2&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;abc&quot;,
            &quot;nullable&quot;: true
          },
          &quot;addressLine3&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;abc&quot;,
            &quot;nullable&quot;: true
          },
          &quot;addressLine4&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;abc&quot;,
            &quot;nullable&quot;: true
          },
          &quot;townCity&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;Abc&quot;,
            &quot;nullable&quot;: true
          },
          &quot;postZipCode&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;string&quot;,
            &quot;example&quot;: &quot;12345&quot;,
            &quot;nullable&quot;: true
          }
        }
      }
    },
    &quot;securitySchemes&quot;: {
      &quot;basicBayerAuth&quot;: {
        &quot;type&quot;: &quot;http&quot;,
        &quot;scheme&quot;: &quot;basic&quot;
      },
      &quot;BayerOAuth&quot;: {
        &quot;type&quot;: &quot;oauth2&quot;,
        &quot;flows&quot;: {
          &quot;clientCredentials&quot;: {
            &quot;tokenUrl&quot;: &quot;https://login.microsoftonline.com/fcb2b37b-5da0-466b-9b83-0014b67a7c78/oauth2/v2.0/token&quot;,
            &quot;scopes&quot;: {
              &quot;api://envision-appian/.default&quot;: &quot;default scope to access everything&quot;
            }
          }
        }
      }
    },
    &quot;parameters&quot;: {
      &quot;personIdentifierParam&quot;: {
        &quot;name&quot;: &quot;personIdentifier&quot;,
        &quot;in&quot;: &quot;path&quot;,
        &quot;description&quot;: &quot;Impact PERSONNEL_NO&quot;,
        &quot;required&quot;: true,
        &quot;example&quot;: 1234,
        &quot;allowEmptyValue&quot;: false,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;description&quot;: &quot;&quot;,
          &quot;format&quot;: &quot;&quot;,
          &quot;maxLength&quot;: 7,
          &quot;deprecated&quot;: false
        }
      },
      &quot;centreNoParam&quot;: {
        &quot;name&quot;: &quot;centreNo&quot;,
        &quot;in&quot;: &quot;path&quot;,
        &quot;description&quot;: &quot;Impact CENTRE_NO&quot;,
        &quot;required&quot;: true,
        &quot;example&quot;: 1234,
        &quot;allowEmptyValue&quot;: false,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;integer&quot;,
          &quot;description&quot;: &quot;&quot;,
          &quot;format&quot;: &quot;&quot;,
          &quot;deprecated&quot;: false
        }
      },
      &quot;occupationScopeParam&quot;: {
        &quot;name&quot;: &quot;scope&quot;,
        &quot;in&quot;: &quot;query&quot;,
        &quot;required&quot;: false,
        &quot;example&quot;: &quot;all&quot;,
        &quot;description&quot;: &quot;Filter based on type of role description. Possible values could be \&quot;int\&quot;, \&quot;ext\&quot; or \&quot;all\&quot;. Option \&quot;int\&quot; is for internal roles, \&quot;ext\&quot; is for external roles and \&quot;all\&quot; is for both roles. &quot;,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;default&quot;: &quot;int&quot;
        }
      },
      &quot;occupationCodeNewQueryParam&quot;: {
        &quot;name&quot;: &quot;occupationCode&quot;,
        &quot;in&quot;: &quot;query&quot;,
        &quot;required&quot;: false,
        &quot;example&quot;: &quot;TRM,RES,SLM,140&quot;,
        &quot;description&quot;: &quot;Filter based on &apos;bayer personnel&apos;s occupation code&apos; or &apos;clinical personnel&apos;s role code&apos;. Multiple codes should be sent as comma separated. Input can be alphanumerical.&quot;,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;string&quot;
        }
      },
      &quot;occupationCodeQueryParam&quot;: {
        &quot;name&quot;: &quot;occupationCode&quot;,
        &quot;in&quot;: &quot;query&quot;,
        &quot;required&quot;: false,
        &quot;example&quot;: &quot;TRM,RES,SLM&quot;,
        &quot;description&quot;: &quot;Filter based on occupation code of personnel. Multiple codes should be sent as comma separated.&quot;,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;string&quot;
        }
      },
      &quot;occupationTypeParam&quot;: {
        &quot;name&quot;: &quot;occupationType&quot;,
        &quot;in&quot;: &quot;query&quot;,
        &quot;required&quot;: false,
        &quot;example&quot;: &quot;clinical,bayer&quot;,
        &quot;description&quot;: &quot;Filter based on occupation type of personnel. Values can be either &apos;clinical&apos; or &apos;bayer&apos;.&quot;,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;enum&quot;: [
            &quot;clinical&quot;,
            &quot;bayer&quot;
          ]
        }
      },
      &quot;personnelTypeQueryParam&quot;: {
        &quot;name&quot;: &quot;personnelType&quot;,
        &quot;in&quot;: &quot;query&quot;,
        &quot;required&quot;: false,
        &quot;example&quot;: &quot;clinical&quot;,
        &quot;description&quot;: &quot;Filter based on type of personnel in IMPACT system, either bayer personnel or clinical personnel. Values can only be either &apos;bayer&apos; or &apos;clinical&apos;.&quot;,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;enum&quot;: [
            &quot;clinical&quot;,
            &quot;bayer&quot;
          ]
        }
      },
      &quot;emailParam&quot;: {
        &quot;name&quot;: &quot;emailAddress&quot;,
        &quot;in&quot;: &quot;path&quot;,
        &quot;required&quot;: true,
        &quot;example&quot;: &quot;abc@email.com&quot;,
        &quot;description&quot;: &quot;Email Address of the Person&quot;,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;string&quot;
        }
      },
      &quot;occupationCodeParam&quot;: {
        &quot;name&quot;: &quot;occupationCode&quot;,
        &quot;in&quot;: &quot;path&quot;,
        &quot;required&quot;: true,
        &quot;example&quot;: &quot;TRM&quot;,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;string&quot;
        }
      },
      &quot;occupationCodeParamCP&quot;: {
        &quot;name&quot;: &quot;occupationCode&quot;,
        &quot;in&quot;: &quot;path&quot;,
        &quot;required&quot;: true,
        &quot;example&quot;: 100,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;string&quot;
        }
      },
      &quot;studyIdentifierParam&quot;: {
        &quot;name&quot;: &quot;studyId&quot;,
        &quot;in&quot;: &quot;path&quot;,
        &quot;required&quot;: true,
        &quot;example&quot;: &quot;16244&quot;,
        &quot;description&quot;: &quot;The study Indentifier is the trial number&quot;,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;integer&quot;
        }
      },
      &quot;eventNumberParam&quot;: {
        &quot;name&quot;: &quot;eventNo&quot;,
        &quot;in&quot;: &quot;path&quot;,
        &quot;required&quot;: true,
        &quot;example&quot;: &quot;1234&quot;,
        &quot;description&quot;: &quot;The event number for trial&quot;,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;integer&quot;
        }
      },
      &quot;authorizationParam&quot;: {
        &quot;name&quot;: &quot;Authorization&quot;,
        &quot;in&quot;: &quot;header&quot;,
        &quot;required&quot;: true,
        &quot;description&quot;: &quot;An authorization header&quot;,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;string&quot;
        }
      },
      &quot;activeStudyParam&quot;: {
        &quot;name&quot;: &quot;activeStudy&quot;,
        &quot;in&quot;: &quot;query&quot;,
        &quot;required&quot;: false,
        &quot;example&quot;: &quot;Y or N&quot;,
        &quot;description&quot;: &quot;To filter the active trials&quot;,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;enum&quot;: [
            &quot;Y&quot;,
            &quot;N&quot;
          ]
        }
      },
      &quot;activeStudyCountryParam&quot;: {
        &quot;name&quot;: &quot;activeStudyCountry&quot;,
        &quot;in&quot;: &quot;query&quot;,
        &quot;required&quot;: false,
        &quot;example&quot;: &quot;Y or N&quot;,
        &quot;description&quot;: &quot;To filter the active country&quot;,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;enum&quot;: [
            &quot;Y&quot;,
            &quot;N&quot;
          ]
        }
      },
      &quot;countryCodeParam&quot;: {
        &quot;name&quot;: &quot;countryCode&quot;,
        &quot;in&quot;: &quot;path&quot;,
        &quot;required&quot;: true,
        &quot;example&quot;: &quot;DE&quot;,
        &quot;description&quot;: &quot;The country code&quot;,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;pattern&quot;: &quot;[A-Z]{2}&quot;
        }
      },
      &quot;ethicalApprovalParam&quot;: {
        &quot;name&quot;: &quot;ethicalApproval&quot;,
        &quot;in&quot;: &quot;path&quot;,
        &quot;required&quot;: true,
        &quot;example&quot;: &quot;U or D or Y&quot;,
        &quot;description&quot;: &quot;The country code&quot;,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;pattern&quot;: &quot;[A-Z]{1}&quot;
        }
      },
      &quot;siteIdentifierParam&quot;: {
        &quot;name&quot;: &quot;siteId&quot;,
        &quot;in&quot;: &quot;path&quot;,
        &quot;required&quot;: true,
        &quot;example&quot;: 10001,
        &quot;description&quot;: &quot;The site id&quot;,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;integer&quot;
        }
      },
      &quot;sequenceNumParam&quot;: {
        &quot;name&quot;: &quot;sequenceNum&quot;,
        &quot;in&quot;: &quot;path&quot;,
        &quot;required&quot;: true,
        &quot;example&quot;: 12,
        &quot;description&quot;: &quot;The sequence number&quot;,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;integer&quot;
        }
      },
      &quot;activeOnDateParam&quot;: {
        &quot;name&quot;: &quot;activeOnDate&quot;,
        &quot;in&quot;: &quot;query&quot;,
        &quot;required&quot;: false,
        &quot;example&quot;: &quot;2020-Jul-15&quot;,
        &quot;description&quot;: &quot;To filter an active personnel (or assignment) in IMPACT. Date should be sent in ISO format.&quot;,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;format&quot;: &quot;date&quot;
        }
      },
      &quot;levelParam&quot;: {
        &quot;name&quot;: &quot;level&quot;,
        &quot;in&quot;: &quot;query&quot;,
        &quot;required&quot;: false,
        &quot;example&quot;: &quot;study,country,site&quot;,
        &quot;description&quot;: &quot;To filter based on levels&quot;,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;enum&quot;: [
            &quot;study&quot;,
            &quot;country&quot;,
            &quot;site&quot;
          ]
        }
      },
      &quot;medicalUnitCodeQueryParam&quot;: {
        &quot;name&quot;: &quot;medicalUnitCode&quot;,
        &quot;in&quot;: &quot;query&quot;,
        &quot;required&quot;: false,
        &quot;example&quot;: &quot;BAE,BAL&quot;,
        &quot;description&quot;: &quot;Filter based on medical unit code. Multiple codes should be sent as comma separated.&quot;,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;string&quot;
        }
      },
      &quot;copiedFromClinicalPlan&quot;: {
        &quot;name&quot;: &quot;copiedFromClinicalPlan&quot;,
        &quot;in&quot;: &quot;query&quot;,
        &quot;required&quot;: false,
        &quot;example&quot;: &quot;Y or N&quot;,
        &quot;description&quot;: &quot;To filter the field COPIED_FROM_CLINICAL_PLAN on trial, country and site level personnel&quot;,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;enum&quot;: [
            &quot;Y&quot;,
            &quot;N&quot;
          ]
        }
      },
      &quot;copiedFromTrial&quot;: {
        &quot;name&quot;: &quot;copiedFromTrial&quot;,
        &quot;in&quot;: &quot;query&quot;,
        &quot;required&quot;: false,
        &quot;example&quot;: &quot;Y or N&quot;,
        &quot;description&quot;: &quot;To filter the field COPIED_FROM_TRIAL on trial, country and site level personnel&quot;,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;enum&quot;: [
            &quot;Y&quot;,
            &quot;N&quot;
          ]
        }
      },
      &quot;copiedFromTrialCountry&quot;: {
        &quot;name&quot;: &quot;copiedFromTrialCountry&quot;,
        &quot;in&quot;: &quot;query&quot;,
        &quot;required&quot;: false,
        &quot;example&quot;: &quot;Y or N&quot;,
        &quot;description&quot;: &quot;To filter the field COPIED_FROM_TRIAL_COUNTRY on trial, country and site level personnel&quot;,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;enum&quot;: [
            &quot;Y&quot;,
            &quot;N&quot;
          ]
        }
      },
      &quot;eventNoParam&quot;: {
        &quot;name&quot;: &quot;eventNo&quot;,
        &quot;in&quot;: &quot;query&quot;,
        &quot;required&quot;: false,
        &quot;style&quot;: &quot;form&quot;,
        &quot;explode&quot;: false,
        &quot;example&quot;: &quot;eventNo=3724,gte:7745&quot;,
        &quot;allowReserved&quot;: true,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;description&quot;: &quot;eventNo is the filtering property.  The service is able to recognize and apply filtering options such as: GTE(\&quot;&gt;=\&quot;), GT(\&quot;&gt;\&quot;), LT(\&quot;&lt;\&quot;), LTE(\&quot;&lt;=\&quot;). All values in the request that are not valid eventNo will be ignored. Example for the filter values: GTE:3200,LT:3500&quot;
      },
      &quot;eventNoStudyParam&quot;: {
        &quot;name&quot;: &quot;eventNo&quot;,
        &quot;in&quot;: &quot;query&quot;,
        &quot;required&quot;: false,
        &quot;example&quot;: &quot;eventNo=3724&quot;,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;integer&quot;,
          &quot;format&quot;: &quot;int64&quot;,
          &quot;minimum&quot;: 0,
          &quot;default&quot;: 0
        },
        &quot;description&quot;: &quot;Get data for specific event No.&quot;
      },
      &quot;plannedDateAfterParam&quot;: {
        &quot;name&quot;: &quot;plannedDateAfter&quot;,
        &quot;in&quot;: &quot;query&quot;,
        &quot;example&quot;: &quot;2021-02-01&quot;,
        &quot;description&quot;: &quot;Get records corresponding to a specific event number whose planned date is after this date.&quot;,
        &quot;required&quot;: false,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;format&quot;: &quot;date&quot;
        }
      },
      &quot;plannedDateBeforeParam&quot;: {
        &quot;name&quot;: &quot;plannedDateBefore&quot;,
        &quot;in&quot;: &quot;query&quot;,
        &quot;example&quot;: &quot;2021-02-01&quot;,
        &quot;description&quot;: &quot;Get records corresponding to a specific event number whose planned date is before this date.&quot;,
        &quot;required&quot;: false,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;format&quot;: &quot;date&quot;
        }
      },
      &quot;actualDateAfterParam&quot;: {
        &quot;name&quot;: &quot;actualDateAfter&quot;,
        &quot;in&quot;: &quot;query&quot;,
        &quot;example&quot;: &quot;2021-02-01&quot;,
        &quot;description&quot;: &quot;Get records corresponding to a specific event number whose actual date is after this date.&quot;,
        &quot;required&quot;: false,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;format&quot;: &quot;date&quot;
        }
      },
      &quot;actualDateBeforeParam&quot;: {
        &quot;name&quot;: &quot;actualDateBefore&quot;,
        &quot;in&quot;: &quot;query&quot;,
        &quot;example&quot;: &quot;2021-02-01&quot;,
        &quot;description&quot;: &quot;Get records corresponding to a specific event number whose actual date is before this date.&quot;,
        &quot;required&quot;: false,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;format&quot;: &quot;date&quot;
        }
      },
      &quot;originalDateAfterParam&quot;: {
        &quot;name&quot;: &quot;originalDateAfter&quot;,
        &quot;in&quot;: &quot;query&quot;,
        &quot;example&quot;: &quot;2021-02-01&quot;,
        &quot;description&quot;: &quot;Get records corresponding to a specific event number whose original date is after this date.&quot;,
        &quot;required&quot;: false,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;format&quot;: &quot;date&quot;
        }
      },
      &quot;originalDateBeforeParam&quot;: {
        &quot;name&quot;: &quot;originalDateBefore&quot;,
        &quot;in&quot;: &quot;query&quot;,
        &quot;example&quot;: &quot;2021-02-01&quot;,
        &quot;description&quot;: &quot;Get records corresponding to a specific event number whose original date is before this date.&quot;,
        &quot;required&quot;: false,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;format&quot;: &quot;date&quot;
        }
      },
      &quot;offsetParam&quot;: {
        &quot;name&quot;: &quot;offset&quot;,
        &quot;in&quot;: &quot;query&quot;,
        &quot;description&quot;: &quot;Number of items to skip before returning the results.&quot;,
        &quot;required&quot;: false,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;integer&quot;,
          &quot;minimum&quot;: 0,
          &quot;default&quot;: 0
        }
      },
      &quot;limitParam&quot;: {
        &quot;name&quot;: &quot;limit&quot;,
        &quot;in&quot;: &quot;query&quot;,
        &quot;description&quot;: &quot;Maximum number of items to return.&quot;,
        &quot;required&quot;: false,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;integer&quot;,
          &quot;minimum&quot;: 1,
          &quot;maximum&quot;: 1000,
          &quot;default&quot;: 100
        }
      },
      &quot;includeParam&quot;: {
        &quot;name&quot;: &quot;include&quot;,
        &quot;in&quot;: &quot;query&quot;,
        &quot;description&quot;: &quot;The related resources to be shown in \&quot;included\&quot; field.\n\nExample value: \&quot;children, owner\&quot;.\n&quot;,
        &quot;required&quot;: false,
        &quot;allowEmptyValue&quot;: true,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;description&quot;: &quot;&quot;,
          &quot;format&quot;: &quot;&quot;,
          &quot;maxLength&quot;: 200,
          &quot;deprecated&quot;: false
        }
      }
    },
    &quot;links&quot;: {},
    &quot;callbacks&quot;: {}
  },
  &quot;tags&quot;: [
    {
      &quot;name&quot;: &quot;Studies service&quot;,
      &quot;description&quot;: &quot;Operations on study level&quot;
    },
    {
      &quot;name&quot;: &quot;Country service&quot;,
      &quot;description&quot;: &quot;Operations on Country level&quot;
    },
    {
      &quot;name&quot;: &quot;Sites service&quot;,
      &quot;description&quot;: &quot;Operations on Site level&quot;
    },
    {
      &quot;name&quot;: &quot;Occupation service&quot;,
      &quot;description&quot;: &quot;Operations on occupation level&quot;
    },
    {
      &quot;name&quot;: &quot;Personnel service&quot;,
      &quot;description&quot;: &quot;Operations on project level&quot;
    },
    {
      &quot;name&quot;: &quot;Medical Unit service&quot;,
      &quot;description&quot;: &quot;Operations on medical unit level&quot;
    },
    {
      &quot;name&quot;: &quot;Reference Data service&quot;,
      &quot;description&quot;: &quot;Operations on Reference Data&quot;
    },
    {
      &quot;name&quot;: &quot;Specification service&quot;,
      &quot;description&quot;: &quot;Operations on OAS specification&quot;
    }
  ],
  &quot;security&quot;: [
    {
      &quot;basicBayerAuth&quot;: []
    },
    {
      &quot;BayerOAuth&quot;: []
    }
  ]
}</schema>
    <schemaType>OpenApi3</schemaType>
    <serviceBinding>{&quot;compatibleMediaTypes&quot;:{}}</serviceBinding>
    <status>Incomplete</status>
    <systemVersion>3</systemVersion>
</ExternalServiceRegistration>
