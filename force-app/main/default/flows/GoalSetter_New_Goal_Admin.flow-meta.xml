<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <apiVersion>56.0</apiVersion>
    <assignments>
        <description>Set all dates for internal goals</description>
        <name>GsDatesInternal</name>
        <label>Set Dates Internal</label>
        <locationX>314</locationX>
        <locationY>1094</locationY>
        <assignmentItems>
            <assignToReference>newGoal.GsTargetMonth__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>targetMonth</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newGoal.GsTargetDate__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GsSetTargetDate</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>checkForExistingGoal</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Set all date values for externally managed goals (LabCorp_Goal)</description>
        <name>GsSetDatesExternal</name>
        <label>Set Dates External</label>
        <locationX>50</locationX>
        <locationY>1094</locationY>
        <assignmentItems>
            <assignToReference>newGoal.GsTargetDate__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GsTargetDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newGoal.GsTargetMonth__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GsGetTargetMonthFromDate</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>checkForExistingGoal</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setGoalvalues</name>
        <label>Set Goal values</label>
        <locationX>182</locationX>
        <locationY>518</locationY>
        <assignmentItems>
            <assignToReference>newGoal.GsAchievedDate__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>achievedDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newGoal.Name</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>setGoalId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newGoal.GsProgram__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>program</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newGoal.GsProject__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>project</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newGoal.GsStudyNumber__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>studyNumber</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newGoal.GsStatus__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Status</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newGoal.GsGoalPeriod__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>getGoalPeriod.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newGoal.GsCreatedAfterFreeze__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>getGoalPeriod.Locked__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newGoal.GsGoalValue__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GsSetGoalValue</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newGoal.GsAdminGoal__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newGoal.GsApprovedBy__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>approvedByValues</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newGoal.GsStandardGoal__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>setStandardGoal</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>isManualTitle</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setManualTitle</name>
        <label>Set Manual Title</label>
        <locationX>50</locationX>
        <locationY>758</locationY>
        <assignmentItems>
            <assignToReference>newGoal.GsGoalTitle__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>goalTitle</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GsIsInternalOrExternalGoal</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setStandardGoalTitle</name>
        <label>Set Standard Goal Title</label>
        <locationX>314</locationX>
        <locationY>758</locationY>
        <assignmentItems>
            <assignToReference>newGoal.GsGoalTitle__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>replaceGoalValue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GsIsInternalOrExternalGoal</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>doesGoalExist</name>
        <label>Does Goal Exist</label>
        <locationX>182</locationX>
        <locationY>1430</locationY>
        <defaultConnector>
            <targetReference>aoalAlreadyExists</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Does Exist</defaultConnectorLabel>
        <rules>
            <name>doesntExist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>checkForExistingGoal</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>saveGoal</targetReference>
            </connector>
            <label>Doesn&apos;t Exist</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check if the goals is internal (study_team_goal, clinical_team_goal) or external (LabCorp_Goal)</description>
        <name>GsIsInternalOrExternalGoal</name>
        <label>Is Internal Or External Goal</label>
        <locationX>182</locationX>
        <locationY>974</locationY>
        <defaultConnector>
            <targetReference>GsDatesInternal</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Internal</defaultConnectorLabel>
        <rules>
            <name>GsExternal</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>newGoal.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>GsParexelGoalRecordTypeId</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>newGoal.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>labCorpGoalRecordTypeId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GsSetDatesExternal</targetReference>
            </connector>
            <label>External</label>
        </rules>
    </decisions>
    <decisions>
        <name>isManualTitle</name>
        <label>Is Manual Title</label>
        <locationX>182</locationX>
        <locationY>638</locationY>
        <defaultConnector>
            <targetReference>setStandardGoalTitle</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Standard Title</defaultConnectorLabel>
        <rules>
            <name>manualTitle</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>newGoal.GsStandardGoal__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>-- enter goal manually --</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setManualTitle</targetReference>
            </connector>
            <label>Manual Title</label>
        </rules>
    </decisions>
    <description>Set study number as goal ID</description>
    <dynamicChoiceSets>
        <name>approvedByValues</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>GsApprovedBy__c</picklistField>
        <picklistObject>GsGoal__c</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>goalStates</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>GsStatus__c</picklistField>
        <picklistObject>GsGoal__c</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>goalTypes</name>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>GsGoal__c</stringValue>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>GsCountryRecruitmentRecordTypeId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>GsVarCovanceGoalRecordTypeId</elementReference>
            </value>
        </filters>
        <object>RecordType</object>
        <outputAssignments>
            <assignToReference>newGoal.RecordTypeId</assignToReference>
            <field>Id</field>
        </outputAssignments>
        <sortField>Name</sortField>
        <sortOrder>Asc</sortOrder>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>targetMonths</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>GsTargetMonth__c</picklistField>
        <picklistObject>GsGoal__c</picklistObject>
    </dynamicChoiceSets>
    <environments>Default</environments>
    <formulas>
        <description>Get the target month from target date</description>
        <name>GsGetTargetMonthFromDate</name>
        <dataType>String</dataType>
        <expression>CASE(MONTH({!GsTargetDate}), 1, &quot;January&quot;, 2, &quot;February&quot;, 3, &quot;March&quot;, 4, &quot;April&quot;, 5, &quot;May&quot;, 6, &quot;June&quot;, 7, &quot;July&quot;, 8, &quot;August&quot;, 9, &quot;September&quot;, 10, &quot;October&quot;, 11, &quot;November&quot;, 12, &quot;December&quot;, &quot;Invalid Date&quot;)</expression>
    </formulas>
    <formulas>
        <description>Returns the numerical representation of the selected target month</description>
        <name>GsGetTargetMonthNumber</name>
        <dataType>Number</dataType>
        <expression>CASE({!targetMonth},
&quot;January&quot;,1,&quot;February&quot;,2,&quot;March&quot;,3,&quot;April&quot;,4,&quot;May&quot;,5,&quot;June&quot;,6,&quot;July&quot;,7,&quot;August&quot;,8,&quot;September&quot;,9,&quot;October&quot;,10,&quot;November&quot;,11,&quot;December&quot;,12,0)</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <description>Copy the value from on of the standard goals into the main goal based on the selected record type</description>
        <name>GsSetGoalValue</name>
        <dataType>Number</dataType>
        <expression>IF({!newGoal.RecordTypeId} = {!studyGoalRecordTypeId}, {!specifyGoalValueStudyTeamGoal}, 
IF({!newGoal.RecordTypeId} = {!GsCroGoalRecordTypeId}, {!SpecifyGoalValueCroGoal}, 
IF({!newGoal.RecordTypeId} = {!GsParexelGoalRecordTypeId}, {!SpecifyGoalValueParexelGoal}, {!SpecifyGoalValueLabCorpGoal})))</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <description>Set the dummy target date for a chosen month</description>
        <name>GsSetTargetDate</name>
        <dataType>Date</dataType>
        <expression>IF(
  MONTH( DATE(VALUE({!getGoalPeriod.Name}),{!GsGetTargetMonthNumber},1)) = 12,
  DATE( YEAR( DATE(VALUE({!getGoalPeriod.Name}),{!GsGetTargetMonthNumber},1)), 12, 31 ),
  DATE( YEAR( DATE(VALUE({!getGoalPeriod.Name}),{!GsGetTargetMonthNumber},1)), MONTH ( DATE(VALUE({!getGoalPeriod.Name}),{!GsGetTargetMonthNumber},1)) + 1, 1 ) - 1 
)</expression>
    </formulas>
    <formulas>
        <name>replaceGoalValue</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE(TEXT({!newGoal.GsStandardGoal__c}), &quot;[value]&quot;, TEXT({!newGoal.GsGoalValue__c}))</expression>
    </formulas>
    <formulas>
        <name>setGoalId</name>
        <dataType>String</dataType>
        <expression>{!studyNumber}</expression>
    </formulas>
    <formulas>
        <name>setStandardGoal</name>
        <dataType>String</dataType>
        <expression>IF({!newGoal.RecordTypeId} = {!clinicalTeamGoalRecordTypeId}, TEXT({!clinicalTeamGoal.GsStandardGoal__c}), IF({!newGoal.RecordTypeId} = {!studyGoalRecordTypeId}, TEXT({!studyGoal.GsStandardGoal__c}), 
IF({!newGoal.RecordTypeId} = {!GsCroGoalRecordTypeId}, TEXT({!GsCroGoal.GsStandardGoal__c}), 
IF({!newGoal.RecordTypeId} = {!GsParexelGoalRecordTypeId}, TEXT({!GsParexelGoal.GsStandardGoal__c}), TEXT({!labCorpGoal.GsStandardGoal__c})))))</expression>
    </formulas>
    <interviewLabel>GoalSetter New Goal Admin {!$Flow.CurrentDateTime}</interviewLabel>
    <label>GoalSetter New Goal Admin</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>saveGoal</name>
        <label>Save Goal</label>
        <locationX>50</locationX>
        <locationY>1550</locationY>
        <inputReference>newGoal</inputReference>
    </recordCreates>
    <recordLookups>
        <name>checkForExistingGoal</name>
        <label>Check For Existing Goal</label>
        <locationX>182</locationX>
        <locationY>1310</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>doesGoalExist</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GsGoalTitle__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>newGoal.GsGoalTitle__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>GsGoalPeriod__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>newGoal.GsGoalPeriod__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>GsStudyNumber__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>newGoal.GsStudyNumber__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>GsProject__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>newGoal.GsProject__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>GsProgram__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>newGoal.GsProgram__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>GsGoal__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getGoalPeriod</name>
        <label>Get Goal Period</label>
        <locationX>182</locationX>
        <locationY>278</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CreateGoalRecord</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>GsGoalPeriod__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <runInMode>DefaultMode</runInMode>
    <screens>
        <name>aoalAlreadyExists</name>
        <label>Goal Already Exists</label>
        <locationX>314</locationX>
        <locationY>1550</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>CreateGoalRecord</targetReference>
        </connector>
        <fields>
            <name>alreadyExistsMessage</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;A goal with the same title already exists for the selected program, project and study in this period.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <nextOrFinishButtonLabel>Go Back</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>CreateGoalRecord</name>
        <label>Create Goal Record</label>
        <locationX>182</locationX>
        <locationY>398</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>setGoalvalues</targetReference>
        </connector>
        <fields>
            <name>CreateGoalHeader</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 20px;&quot;&gt;Create a new goal (admin) for {!getGoalPeriod.Name}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>goalCreationWarning</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Warning: This goal creation process should only be used in exceptional cases (e.g. for canceled studies that cannot be selected in the regular creation process). &lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;All validation and permission checks are turned off.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>CreateGoalRecord_Section1</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>CreateGoalRecord_Section1_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>goalType</name>
                    <choiceReferences>goalTypes</choiceReferences>
                    <dataType>String</dataType>
                    <defaultValue>
                        <elementReference>goalTypes</elementReference>
                    </defaultValue>
                    <fieldText>Goal Type</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <isRequired>false</isRequired>
                    <objectFieldReference>studyGoal.GsStandardGoal__c</objectFieldReference>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>goalType</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>studyGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <isRequired>false</isRequired>
                    <objectFieldReference>labCorpGoal.GsStandardGoal__c</objectFieldReference>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>goalType</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>labCorpGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <isRequired>false</isRequired>
                    <objectFieldReference>clinicalTeamGoal.GsStandardGoal__c</objectFieldReference>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>goalType</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>clinicalTeamGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <isRequired>false</isRequired>
                    <objectFieldReference>GsParexelGoal.GsStandardGoal__c</objectFieldReference>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>goalType</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>GsParexelGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <isRequired>false</isRequired>
                    <objectFieldReference>GsCroGoal.GsStandardGoal__c</objectFieldReference>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>goalType</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>GsCroGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>goalTitle</name>
                    <dataType>String</dataType>
                    <defaultValue>
                        <elementReference>goalTitle</elementReference>
                    </defaultValue>
                    <fieldText>Goal Title</fieldText>
                    <fieldType>InputField</fieldType>
                    <isRequired>true</isRequired>
                    <visibilityRule>
                        <conditionLogic>(1 AND 4) OR (3 AND 5) OR (2 AND 6) OR (7 AND 8) OR (9 AND 10)</conditionLogic>
                        <conditions>
                            <leftValueReference>studyGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>-- enter goal manually --</stringValue>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>labCorpGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>-- enter goal manually --</stringValue>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>clinicalTeamGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>-- enter goal manually --</stringValue>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>goalType</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>studyGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>goalType</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>clinicalTeamGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>goalType</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>labCorpGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>goalType</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>GsCroGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GsCroGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>-- enter goal manually --</stringValue>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>goalType</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>GsParexelGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GsParexelGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>-- enter goal manually --</stringValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>specifyGoalValueStudyTeamGoal</name>
                    <dataType>Number</dataType>
                    <defaultValue>
                        <elementReference>specifyGoalValueStudyTeamGoal</elementReference>
                    </defaultValue>
                    <fieldText>Specify Goal Value (0-100)</fieldText>
                    <fieldType>InputField</fieldType>
                    <isRequired>true</isRequired>
                    <scale>0</scale>
                    <validationRule>
                        <errorMessage>&lt;p&gt;Value must be between 0 and 100.&lt;/p&gt;</errorMessage>
                        <formulaExpression>AND({!specifyGoalValueStudyTeamGoal} &gt;= 0, {!specifyGoalValueStudyTeamGoal} &lt;= 100)</formulaExpression>
                    </validationRule>
                    <visibilityRule>
                        <conditionLogic>(1 AND (2 OR 3 OR 4))</conditionLogic>
                        <conditions>
                            <leftValueReference>goalType</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>studyGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>studyGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>Achieve [value]% RTE</stringValue>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>studyGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>Achieve [value]% subject cleaned</stringValue>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>studyGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>Randomize [value]% subjects</stringValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>SpecifyGoalValueLabCorpGoal</name>
                    <dataType>Number</dataType>
                    <defaultValue>
                        <elementReference>SpecifyGoalValueLabCorpGoal</elementReference>
                    </defaultValue>
                    <fieldText>Specify Goal Value (0-100)</fieldText>
                    <fieldType>InputField</fieldType>
                    <isRequired>true</isRequired>
                    <scale>0</scale>
                    <validationRule>
                        <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Value must be between 0 and 100.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                        <formulaExpression>AND({!SpecifyGoalValueLabCorpGoal} &gt;= 0, {!SpecifyGoalValueLabCorpGoal} &lt;= 100)</formulaExpression>
                    </validationRule>
                    <visibilityRule>
                        <conditionLogic>(1 AND (2 OR 3 OR 4))</conditionLogic>
                        <conditions>
                            <leftValueReference>goalType</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>labCorpGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>labCorpGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>Achieve [value]% RTE</stringValue>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>labCorpGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>Achieve [value]% subject cleaned</stringValue>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>labCorpGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>Randomize [value]% subjects</stringValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>SpecifyGoalValueParexelGoal</name>
                    <dataType>Number</dataType>
                    <defaultValue>
                        <elementReference>SpecifyGoalValueParexelGoal</elementReference>
                    </defaultValue>
                    <fieldText>Specify Goal Value (0-100)</fieldText>
                    <fieldType>InputField</fieldType>
                    <isRequired>true</isRequired>
                    <scale>0</scale>
                    <validationRule>
                        <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Value must be between 0 and 100.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                        <formulaExpression>AND({!SpecifyGoalValueParexelGoal} &gt;= 0, {!SpecifyGoalValueParexelGoal} &lt;= 100)</formulaExpression>
                    </validationRule>
                    <visibilityRule>
                        <conditionLogic>(1 AND (2 OR 3 OR 4))</conditionLogic>
                        <conditions>
                            <leftValueReference>goalType</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>GsParexelGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GsParexelGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>Achieve [value]% RTE</stringValue>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GsParexelGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>Achieve [value]% subject cleaned</stringValue>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GsParexelGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>Randomize [value]% subjects</stringValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>SpecifyGoalValueCroGoal</name>
                    <dataType>Number</dataType>
                    <defaultValue>
                        <elementReference>SpecifyGoalValueCroGoal</elementReference>
                    </defaultValue>
                    <fieldText>Specify Goal Value (0-100)</fieldText>
                    <fieldType>InputField</fieldType>
                    <isRequired>true</isRequired>
                    <scale>0</scale>
                    <validationRule>
                        <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Value must be between 0 and 100.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                        <formulaExpression>AND({!SpecifyGoalValueCroGoal} &gt;= 0, {!SpecifyGoalValueCroGoal} &lt;= 100)</formulaExpression>
                    </validationRule>
                    <visibilityRule>
                        <conditionLogic>(1 AND (2 OR 3 OR 4))</conditionLogic>
                        <conditions>
                            <leftValueReference>goalType</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>GsCroGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GsCroGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>Achieve [value]% RTE</stringValue>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GsCroGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>Achieve [value]% subject cleaned</stringValue>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GsCroGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>Randomize [value]% subjects</stringValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <isRequired>false</isRequired>
                    <objectFieldReference>newGoal.GsKeyGoal__c</objectFieldReference>
                    <visibilityRule>
                        <conditionLogic>or</conditionLogic>
                        <conditions>
                            <leftValueReference>goalType</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>studyGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>goalType</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>clinicalTeamGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>goalType</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>GsCroGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <isRequired>false</isRequired>
                    <objectFieldReference>newGoal.GsFinalCosmosDelivery__c</objectFieldReference>
                    <visibilityRule>
                        <conditionLogic>or</conditionLogic>
                        <conditions>
                            <leftValueReference>goalType</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>GsParexelGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>goalType</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>labCorpGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>CreateGoalRecord_Section1_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>program</name>
                    <dataType>String</dataType>
                    <defaultValue>
                        <elementReference>program</elementReference>
                    </defaultValue>
                    <fieldText>Program</fieldText>
                    <fieldType>InputField</fieldType>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <name>project</name>
                    <dataType>String</dataType>
                    <defaultValue>
                        <elementReference>project</elementReference>
                    </defaultValue>
                    <fieldText>Project</fieldText>
                    <fieldType>InputField</fieldType>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <name>studyNumber</name>
                    <dataType>String</dataType>
                    <defaultValue>
                        <elementReference>studyNumber</elementReference>
                    </defaultValue>
                    <fieldText>Study Number</fieldText>
                    <fieldType>InputField</fieldType>
                    <isRequired>true</isRequired>
                    <validationRule>
                        <errorMessage>&lt;p&gt;Study Number needs to be a numeric value.&lt;/p&gt;</errorMessage>
                        <formulaExpression>AND(ISNUMBER({!studyNumber}))</formulaExpression>
                    </validationRule>
                </fields>
                <fields>
                    <name>targetMonth</name>
                    <choiceReferences>targetMonths</choiceReferences>
                    <dataType>String</dataType>
                    <defaultValue>
                        <elementReference>targetMonths</elementReference>
                    </defaultValue>
                    <fieldText>Target Month</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <isRequired>true</isRequired>
                    <visibilityRule>
                        <conditionLogic>or</conditionLogic>
                        <conditions>
                            <leftValueReference>goalType</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>clinicalTeamGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>goalType</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>studyGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>goalType</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>GsCroGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>GsTargetDate</name>
                    <dataType>Date</dataType>
                    <defaultValue>
                        <elementReference>GsTargetDate</elementReference>
                    </defaultValue>
                    <fieldText>Target Date</fieldText>
                    <fieldType>InputField</fieldType>
                    <isRequired>true</isRequired>
                    <visibilityRule>
                        <conditionLogic>or</conditionLogic>
                        <conditions>
                            <leftValueReference>goalType</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>labCorpGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>goalType</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>GsParexelGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>Status</name>
                    <choiceReferences>goalStates</choiceReferences>
                    <dataType>String</dataType>
                    <defaultValue>
                        <elementReference>goalStates</elementReference>
                    </defaultValue>
                    <fieldText>Status</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <name>achievedDate</name>
                    <dataType>Date</dataType>
                    <defaultValue>
                        <elementReference>achievedDate</elementReference>
                    </defaultValue>
                    <fieldText>Achieved Date</fieldText>
                    <fieldType>InputField</fieldType>
                    <isRequired>true</isRequired>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>Status</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>Achieved</stringValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>approvedBy</name>
                    <choiceReferences>approvedByValues</choiceReferences>
                    <dataType>String</dataType>
                    <defaultValue>
                        <elementReference>approvedByValues</elementReference>
                    </defaultValue>
                    <fieldText>Approved By</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <isRequired>true</isRequired>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>getGoalPeriod.Locked__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <booleanValue>true</booleanValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <nextOrFinishButtonLabel>Save Goal</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>InitDefaultGoalTypes</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <name>InitDefaultGoalTypes</name>
        <label>Init Default Goal Types</label>
        <locationX>182</locationX>
        <locationY>158</locationY>
        <connector>
            <targetReference>getGoalPeriod</targetReference>
        </connector>
        <flowName>GsGoalSetterInitRecordTypeGoals</flowName>
        <outputAssignments>
            <assignToReference>clinicalTeamGoal</assignToReference>
            <name>GsDefaultClinicalTeamGoal</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>GsCroGoal</assignToReference>
            <name>GsDefaultCroGoal</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>labCorpGoal</assignToReference>
            <name>GsDefaultLabCorpGoal</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>GsParexelGoal</assignToReference>
            <name>GsDefaultParexelGoal</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>studyGoal</assignToReference>
            <name>GsDefaultStudyTeamGoal</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>clinicalTeamGoalRecordTypeId</assignToReference>
            <name>GsVarClinicalTeamGoalRecordTypeId</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>GsCountryRecruitmentRecordTypeId</assignToReference>
            <name>GsVarCountryRecruitmentGoalRecordTypeId</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>GsVarCovanceGoalRecordTypeId</assignToReference>
            <name>GsVarCovanceGoalRecordTypeId</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>GsCroGoalRecordTypeId</assignToReference>
            <name>GsVarCroRecordTypeId</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>labCorpGoalRecordTypeId</assignToReference>
            <name>GsVarLabCorpRecordTypeId</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>GsParexelGoalRecordTypeId</assignToReference>
            <name>GsVarParexelRecordTypeId</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>studyGoalRecordTypeId</assignToReference>
            <name>GsVarStudyTeamGoalRecordTypeId</name>
        </outputAssignments>
    </subflows>
    <variables>
        <name>clinicalTeamGoal</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>GsGoal__c</objectType>
    </variables>
    <variables>
        <name>clinicalTeamGoalRecordTypeId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>GsCountryRecruitmentRecordTypeId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>GsCroGoal</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>GsGoal__c</objectType>
    </variables>
    <variables>
        <name>GsCroGoalRecordTypeId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>GsParexelGoal</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>GsGoal__c</objectType>
    </variables>
    <variables>
        <name>GsParexelGoalRecordTypeId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>GsVarCountryRecruitmentGoalRecordTypeDevName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>GsCountryRecruitmentGoal</stringValue>
        </value>
    </variables>
    <variables>
        <name>GsVarCovanceGoalRecordTypeDevName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>GsCovanceGoal</stringValue>
        </value>
    </variables>
    <variables>
        <name>GsVarCovanceGoalRecordTypeId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>labCorpGoal</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>GsGoal__c</objectType>
    </variables>
    <variables>
        <name>labCorpGoalRecordTypeId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>newGoal</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>GsGoal__c</objectType>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>studyGoal</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>GsGoal__c</objectType>
    </variables>
    <variables>
        <name>studyGoalRecordTypeId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
