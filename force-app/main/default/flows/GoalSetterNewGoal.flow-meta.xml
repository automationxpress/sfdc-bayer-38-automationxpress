<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <apiVersion>56.0</apiVersion>
    <assignments>
        <description>Set missing target values in case the goals is handled externally (LabCorp_Goal)</description>
        <name>GsSetMissginTargetValuesExternal</name>
        <label>Set Missing Target Values External</label>
        <locationX>398</locationX>
        <locationY>1982</locationY>
        <assignmentItems>
            <assignToReference>varGoalRecord.GsTargetMonth__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GsSetTargetMonth</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varGoalRecord.GsTargetDate__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GsTargetDate</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_for_existing_goal</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Set all target dates for internal goals (study_team_goal, clinical_team_goal)</description>
        <name>GsSetMissingTargetDatesInternal</name>
        <label>Set Missing Target Dates Internal</label>
        <locationX>662</locationX>
        <locationY>1982</locationY>
        <assignmentItems>
            <assignToReference>varGoalRecord.GsTargetDate__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>SetTargetDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varGoalRecord.GsTargetMonth__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>TargetMonthCustomPicklist</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_for_existing_goal</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SetGoalPercentValue</name>
        <label>Set Goal Percent Value</label>
        <locationX>662</locationX>
        <locationY>1646</locationY>
        <assignmentItems>
            <assignToReference>varGoalRecord.GsGoalTitle__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>SubstituteGoalPercentValue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GsExternalOrInternalGoal</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets the selected Impact project.</description>
        <name>SetImpactProject</name>
        <label>Set Impact Project</label>
        <locationX>138</locationX>
        <locationY>998</locationY>
        <assignmentItems>
            <assignToReference>varGoalRecord.GsStudyNumber__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GsVarGeneralProjectChoiceLabel</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varGoalRecord.Name</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GsVarGeneralProjectChoiceLabel</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>SelectedImpactStudy</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>LoopSelectImpactProject</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopSelectImpactProject</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets the selected Impact study.</description>
        <name>SetImpactProjectStudy</name>
        <label>Set Impact Study</label>
        <locationX>618</locationX>
        <locationY>998</locationY>
        <assignmentItems>
            <assignToReference>varGoalRecord.GsStudyNumber__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>LoopSelectImpactProjectStudy.studyId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varGoalRecord.Name</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>LoopSelectImpactProjectStudy.studyId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>SelectedImpactStudy</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>LoopSelectImpactProjectStudy</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopSelectImpactProjectStudy</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets the selected Impact study.</description>
        <name>SetImpactStudy</name>
        <label>Set Impact Study</label>
        <locationX>1098</locationX>
        <locationY>998</locationY>
        <assignmentItems>
            <assignToReference>SelectedImpactStudy</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>LoopSelectImpactStudy</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varGoalRecord.GsStudyNumber__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>LoopSelectImpactStudy.studyId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varGoalRecord.Name</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>LoopSelectImpactStudy.studyId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopSelectImpactStudy</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setManualGoalTitle</name>
        <label>Set Manual Goal Title</label>
        <locationX>398</locationX>
        <locationY>1646</locationY>
        <assignmentItems>
            <assignToReference>varGoalRecord.GsGoalTitle__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>goalTitle</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GsExternalOrInternalGoal</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>UpdateGoalVariablePriorCreate</name>
        <label>Update Goal variable prior create</label>
        <locationX>530</locationX>
        <locationY>1406</locationY>
        <assignmentItems>
            <assignToReference>varGoalRecord.GsApprovedBy__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ApprovedByPicklist</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varGoalRecord.GsAchievedDate__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>AchievedDatePicklist</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varGoalRecord.GsProgram__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>SelectedImpactStudy.bayNumber</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varGoalRecord.GsProject__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>SelectedImpactStudy.bspProjId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varGoalRecord.GsCreatedAfterFreeze__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IsEditPhaseClosed</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varGoalRecord.GsStatus__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>StatusCustomPicklist</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varGoalRecord.GsGoalValue__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GsSetGoalValue</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varGoalRecord.GsStandardGoal__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>setStandardGoal</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varGoalRecord.GsComments__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CommentsLongTextArea</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GoalManuallyEntered</targetReference>
        </connector>
    </assignments>
    <choices>
        <description>The choice when a general project goal should be created.</description>
        <name>GeneralProjectChoice</name>
        <choiceText>{!GsVarGeneralProjectChoiceLabel}</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>general</stringValue>
        </value>
    </choices>
    <decisions>
        <name>Check_if_goal_exists</name>
        <label>Check if goal exists</label>
        <locationX>530</locationX>
        <locationY>2318</locationY>
        <defaultConnector>
            <targetReference>Goal_Already_Exists_Screen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Does exist</defaultConnectorLabel>
        <rules>
            <name>doesnt_exist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Check_for_existing_goal</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CreateNewGoalRecord</targetReference>
            </connector>
            <label>Doesn&apos;t exist</label>
        </rules>
    </decisions>
    <decisions>
        <name>GoalManuallyEntered</name>
        <label>Goal Manually Entered</label>
        <locationX>530</locationX>
        <locationY>1526</locationY>
        <defaultConnector>
            <targetReference>SetGoalPercentValue</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Standard Goal</defaultConnectorLabel>
        <rules>
            <name>YesManuallyEntered</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varGoalRecord.GsStandardGoal__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>-- enter goal manually --</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setManualGoalTitle</targetReference>
            </connector>
            <label>Custom Goal</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check if the goal will be handled externally (Labcorp, Parexel) or internally.</description>
        <name>GsExternalOrInternalGoal</name>
        <label>External or Internal Goal</label>
        <locationX>530</locationX>
        <locationY>1862</locationY>
        <defaultConnector>
            <targetReference>GsSetMissingTargetDatesInternal</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Internal</defaultConnectorLabel>
        <rules>
            <name>GsExternal</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>varGoalRecord.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>labCorpGoalRecorcTypeId</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>varGoalRecord.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>GsParexelRecordTypeId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GsSetMissginTargetValuesExternal</targetReference>
            </connector>
            <label>External</label>
        </rules>
    </decisions>
    <decisions>
        <description>Go with the flow if we were able to obtain dtat. Otherwise present the user with an error.</description>
        <name>ImpactCallsucessfulDecision</name>
        <label>Impact Call sucessful?</label>
        <locationX>834</locationX>
        <locationY>278</locationY>
        <defaultConnector>
            <targetReference>ErrorWhileCreatingNewGoal</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Failed Impact Call</defaultConnectorLabel>
        <rules>
            <name>SuccessfulImpactCall</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ImpactCallSucessful</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GsInitDefaultGoalTypes</targetReference>
            </connector>
            <label>Successful Impact Call</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check wether this is the selected Impact project.</description>
        <name>IsSelectedImpactProject</name>
        <label>Is selected Impact Project?</label>
        <locationX>270</locationX>
        <locationY>878</locationY>
        <defaultConnector>
            <targetReference>LoopSelectImpactProject</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Is not selected project</defaultConnectorLabel>
        <rules>
            <name>SelectedProject</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>LoopSelectImpactProject.bspProjId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>ClinicalTeamProjectNumber</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetImpactProject</targetReference>
            </connector>
            <label>Selected Project</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check wether this is the selected Impact study.</description>
        <name>isSelectedImpactStudy</name>
        <label>Is selected Impact Study?</label>
        <locationX>1230</locationX>
        <locationY>878</locationY>
        <defaultConnector>
            <targetReference>LoopSelectImpactStudy</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Is not selected study</defaultConnectorLabel>
        <rules>
            <name>IsSelectedStudy</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>LoopSelectImpactStudy.studyId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>StudyTeamStudyNumber</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetImpactStudy</targetReference>
            </connector>
            <label>Is Selected Study</label>
        </rules>
    </decisions>
    <decisions>
        <description>Decides wether this is a study or project specific goal.</description>
        <name>IsStudySpecificGoal</name>
        <label>Is study or project specific goal?</label>
        <locationX>530</locationX>
        <locationY>638</locationY>
        <defaultConnector>
            <targetReference>LoopSelectImpactStudy</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Study specific goal</defaultConnectorLabel>
        <rules>
            <name>ProjectSpecificGoal</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GoalRecordType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>clinicalTeamRecordTypeId</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ClinicalTeamStudyNumber</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>GeneralProjectChoice</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>LoopSelectImpactProject</targetReference>
            </connector>
            <label>Project specific goal</label>
        </rules>
        <rules>
            <name>ClinicalTeamGoal</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GoalRecordType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>clinicalTeamRecordTypeId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>LoopSelectImpactProjectStudy</targetReference>
            </connector>
            <label>Clinical Team Goal</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check wether this is the selected Impact study.</description>
        <name>SelectedImpactProjectStudy</name>
        <label>Is selected Impact Study?</label>
        <locationX>750</locationX>
        <locationY>878</locationY>
        <defaultConnector>
            <targetReference>LoopSelectImpactProjectStudy</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Is not selected study</defaultConnectorLabel>
        <rules>
            <name>IsSelectedProjectStudy</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>LoopSelectImpactProjectStudy.studyId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>ClinicalTeamStudyNumber</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetImpactProjectStudy</targetReference>
            </connector>
            <label>Is Selected Study</label>
        </rules>
    </decisions>
    <description>General Study fix</description>
    <dynamicChoiceSets>
        <name>ApprovedByPicklistChoiceSet</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>GsApprovedBy__c</picklistField>
        <picklistObject>GsGoal__c</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <description>A list fo all goal periods, which a goal be added to.</description>
        <name>GoalPeriodChoiceSet</name>
        <dataType>Boolean</dataType>
        <displayField>Name</displayField>
        <filterLogic>(1 AND 2) OR (3 AND 4)</filterLogic>
        <filters>
            <field>EditPeriodEnd__c</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>EditPeriodEnd__c</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>Period_End__c</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>Period_Start__c</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </filters>
        <object>GsGoalPeriod__c</object>
        <outputAssignments>
            <assignToReference>varGoalRecord.GsGoalPeriod__c</assignToReference>
            <field>Id</field>
        </outputAssignments>
        <sortField>Name</sortField>
        <sortOrder>Asc</sortOrder>
        <valueField>Locked__c</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>GoalRecordType</name>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>GsGoal__c</stringValue>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>GsVarCovanceGoalRecordTypeId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>GsVarCountryRecruitmentGoalRecordTypeId</elementReference>
            </value>
        </filters>
        <object>RecordType</object>
        <outputAssignments>
            <assignToReference>varGoalRecord.RecordTypeId</assignToReference>
            <field>Id</field>
        </outputAssignments>
        <sortField>Name</sortField>
        <sortOrder>Asc</sortOrder>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <description>A list fo all projects available for selection by the current user.</description>
        <name>ProjectChoiceSet</name>
        <collectionReference>UniqueProjectList</collectionReference>
        <dataType>String</dataType>
        <displayField>bspProjId</displayField>
        <object xsi:nil="true"/>
        <valueField>bspProjId</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <description>The list of study numbers to choose from.</description>
        <name>ProjectStudyNumberChoiceSet</name>
        <collectionReference>ImpactProjectList</collectionReference>
        <dataType>String</dataType>
        <displayField>studyId</displayField>
        <object xsi:nil="true"/>
        <valueField>studyId</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>StatusPicklistChoiceSet</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>GsStatus__c</picklistField>
        <picklistObject>GsGoal__c</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <description>The list of study numbers to choose from</description>
        <name>StudyNumberChoiceList</name>
        <collectionReference>ImpactStudyList</collectionReference>
        <dataType>String</dataType>
        <displayField>studyId</displayField>
        <object xsi:nil="true"/>
        <valueField>studyId</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>TargetMonthChoiceSet</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>GsTargetMonth__c</picklistField>
        <picklistObject>GsGoal__c</picklistObject>
    </dynamicChoiceSets>
    <environments>Default</environments>
    <formulas>
        <name>GetMonthNumber</name>
        <dataType>Number</dataType>
        <expression>CASE({!TargetMonthCustomPicklist},
&quot;January&quot;,1,&quot;February&quot;,2,&quot;March&quot;,3,&quot;April&quot;,4,&quot;May&quot;,5,&quot;June&quot;,6,&quot;July&quot;,7,&quot;August&quot;,8,&quot;September&quot;,9,&quot;October&quot;,10,&quot;November&quot;,11,&quot;December&quot;,12,0)</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <description>Check if the goal is handled externally (Labcorp, Parexel)</description>
        <name>GsIsExternalGoal</name>
        <dataType>Boolean</dataType>
        <expression>true</expression>
    </formulas>
    <formulas>
        <description>Copy over the goal value from on of the record type dependent goal value fields</description>
        <name>GsSetGoalValue</name>
        <dataType>Number</dataType>
        <expression>IF({!varGoalRecord.RecordTypeId} = {!studyTeamGoalRecordTypeId}, {!SpecifyYourGoalValueStudyTeamGoal}, 
IF({!varGoalRecord.RecordTypeId} = {!GsParexelRecordTypeId}, {!GsSpecifyYourGoalValueParexelGoal},
IF({!varGoalRecord.RecordTypeId} = {!GsCroGoalRecordTypeId}, {!GsSpecifyYourGoalValueCroGoal},
{!GsSpecifyYourGoalValueLabcorpGoal} ) ) )</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <description>Set the month field from the entered target date</description>
        <name>GsSetTargetMonth</name>
        <dataType>String</dataType>
        <expression>CASE(MONTH({!GsTargetDate}), 1, &quot;January&quot;, 2, &quot;February&quot;, 3, &quot;March&quot;, 4, &quot;April&quot;, 5, &quot;May&quot;, 6, &quot;June&quot;, 7, &quot;July&quot;, 8, &quot;August&quot;, 9, &quot;September&quot;, 10, &quot;October&quot;, 11, &quot;November&quot;, 12, &quot;December&quot;, &quot;Invalid Date&quot;)</expression>
    </formulas>
    <formulas>
        <description>This formula decides to either retrieve all responsible persons from impact or all clinical program managers.</description>
        <name>ImpactOccupationAbbreviation</name>
        <dataType>String</dataType>
        <expression>IF({!varGoalRecord.RecordTypeId} = &quot;0123N000003zlArQAI&quot;, &quot;CPM&quot;, &quot;RES&quot;)</expression>
    </formulas>
    <formulas>
        <name>IsEditPhaseClosed</name>
        <dataType>Boolean</dataType>
        <expression>{!varGoalRecord.GsGoalPeriod__r.Locked__c} = TRUE</expression>
    </formulas>
    <formulas>
        <name>IsValidPercentValue</name>
        <dataType>Boolean</dataType>
        <expression>AND({!SpecifyYourGoalValueStudyTeamGoal}&gt;=0,{!SpecifyYourGoalValueStudyTeamGoal}&lt;=100)</expression>
    </formulas>
    <formulas>
        <name>setStandardGoal</name>
        <dataType>String</dataType>
        <expression>IF({!varGoalRecord.RecordTypeId} = {!clinicalTeamRecordTypeId}, TEXT({!newClinicalTeamGoal.GsStandardGoal__c}), 
IF({!varGoalRecord.RecordTypeId} = {!studyTeamGoalRecordTypeId}, TEXT({!newStudyTeamGoal.GsStandardGoal__c}), 
IF({!varGoalRecord.RecordTypeId} = {!GsParexelRecordTypeId}, TEXT({!GsNewParexelGoal.GsStandardGoal__c}),
IF({!varGoalRecord.RecordTypeId} = {!GsCroGoalRecordTypeId}, TEXT({!GsNewCroGoal.GsStandardGoal__c}),
TEXT({!newLabCorpGoal.GsStandardGoal__c}) ) ) ) )</expression>
    </formulas>
    <formulas>
        <name>SetTargetDate</name>
        <dataType>Date</dataType>
        <expression>IF(
  MONTH( DATE(VALUE({!varGoalRecord.GsGoalPeriod__r.Name}),{!GetMonthNumber},1)) = 12,
  DATE( YEAR( DATE(VALUE({!varGoalRecord.GsGoalPeriod__r.Name}),{!GetMonthNumber},1)), 12, 31 ),
  DATE( YEAR( DATE(VALUE({!varGoalRecord.GsGoalPeriod__r.Name}),{!GetMonthNumber},1)), MONTH ( DATE(VALUE({!varGoalRecord.GsGoalPeriod__r.Name}),{!GetMonthNumber},1)) + 1, 1 ) - 1 
)</expression>
    </formulas>
    <formulas>
        <name>SubstituteGoalPercentValue</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE(TEXT({!varGoalRecord.GsStandardGoal__c}), &quot;[value]&quot;, TEXT({!varGoalRecord.GsGoalValue__c}))</expression>
    </formulas>
    <interviewLabel>New Goal {!$Flow.CurrentDateTime}</interviewLabel>
    <label>GoalSetter: New Goal</label>
    <loops>
        <description>This loop only exists to get the first project from the collection.</description>
        <name>LoopSelectImpactProject</name>
        <label>Loop To Select Impact Project</label>
        <locationX>50</locationX>
        <locationY>758</locationY>
        <collectionReference>UniqueProjectList</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>IsSelectedImpactProject</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>UpdateGoalVariablePriorCreate</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>This loop only exists to get the first study from the collection.</description>
        <name>LoopSelectImpactProjectStudy</name>
        <label>Loop To Select Impact Study</label>
        <locationX>530</locationX>
        <locationY>758</locationY>
        <collectionReference>ImpactProjectList</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>SelectedImpactProjectStudy</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>UpdateGoalVariablePriorCreate</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>This loopü only exists to get the first study from the collection.</description>
        <name>LoopSelectImpactStudy</name>
        <label>Loop To Select Impact Study</label>
        <locationX>1010</locationX>
        <locationY>758</locationY>
        <collectionReference>ImpactStudyList</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>isSelectedImpactStudy</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>UpdateGoalVariablePriorCreate</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>CreateNewGoalRecord</name>
        <label>Create New Goal Record</label>
        <locationX>398</locationX>
        <locationY>2438</locationY>
        <inputReference>varGoalRecord</inputReference>
    </recordCreates>
    <recordLookups>
        <name>Check_for_existing_goal</name>
        <label>Check for existing goal</label>
        <locationX>530</locationX>
        <locationY>2198</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_if_goal_exists</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GsGoalTitle__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varGoalRecord.GsGoalTitle__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>GsGoalPeriod__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varGoalRecord.GsGoalPeriod__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>GsStudyNumber__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varGoalRecord.GsStudyNumber__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>GsProject__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varGoalRecord.GsProject__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>GsProgram__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varGoalRecord.GsProgram__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>GsGoal__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <screens>
        <name>CreateGoalRecord</name>
        <label>Create Goal Record</label>
        <locationX>530</locationX>
        <locationY>518</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>IsStudySpecificGoal</targetReference>
        </connector>
        <fields>
            <name>NewFormHeader</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 20px;&quot;&gt;Create a new goal&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>CreateGoalRecord_Section1</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>CreateGoalRecord_Section1_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>GoalTypePicklist</name>
                    <choiceReferences>GoalRecordType</choiceReferences>
                    <dataType>String</dataType>
                    <defaultValue>
                        <elementReference>GoalRecordType</elementReference>
                    </defaultValue>
                    <fieldText>Goal Type</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <name>GoalPeriodPicklist</name>
                    <choiceReferences>GoalPeriodChoiceSet</choiceReferences>
                    <dataType>Boolean</dataType>
                    <fieldText>Goal Period</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <name>MessageAfterFreezeDate</name>
                    <fieldText>&lt;p&gt;&lt;span style=&quot;font-size: 12px; color: rgb(64, 131, 190);&quot;&gt;You are adding a goal after the freeze date passed.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12px; color: rgb(64, 131, 190);&quot;&gt;Please seek approval prior to adding this new goal. The &quot;Approved By&quot; field is mandatory.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12px; color: rgb(64, 131, 190);&quot;&gt;﻿Please also lock the goal, as soon as it is final.&lt;/span&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>GoalPeriodPicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <booleanValue>true</booleanValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <isRequired>false</isRequired>
                    <objectFieldReference>newClinicalTeamGoal.GsStandardGoal__c</objectFieldReference>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>GoalTypePicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>clinicalTeamRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <isRequired>false</isRequired>
                    <objectFieldReference>newStudyTeamGoal.GsStandardGoal__c</objectFieldReference>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>GoalTypePicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>studyTeamGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <isRequired>false</isRequired>
                    <objectFieldReference>newLabCorpGoal.GsStandardGoal__c</objectFieldReference>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>GoalTypePicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>labCorpGoalRecorcTypeId</elementReference>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <isRequired>false</isRequired>
                    <objectFieldReference>GsNewParexelGoal.GsStandardGoal__c</objectFieldReference>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>GoalTypePicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>GsParexelRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <isRequired>false</isRequired>
                    <objectFieldReference>GsNewCroGoal.GsStandardGoal__c</objectFieldReference>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>GoalTypePicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>GsCroGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>goalTitle</name>
                    <dataType>String</dataType>
                    <defaultValue>
                        <elementReference>goalTitle</elementReference>
                    </defaultValue>
                    <fieldText>Goal Title</fieldText>
                    <fieldType>InputField</fieldType>
                    <isRequired>true</isRequired>
                    <visibilityRule>
                        <conditionLogic>(1 AND 2) OR (3 AND 4) OR (5 AND 6) OR (7 AND 8) OR (9 AND 10)</conditionLogic>
                        <conditions>
                            <leftValueReference>newStudyTeamGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>-- enter goal manually --</stringValue>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GoalTypePicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>studyTeamGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>newClinicalTeamGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>-- enter goal manually --</stringValue>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GoalTypePicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>clinicalTeamRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>newLabCorpGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>-- enter goal manually --</stringValue>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GoalTypePicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>labCorpGoalRecorcTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GoalTypePicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>GsCroGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GsNewCroGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>-- enter goal manually --</stringValue>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GoalTypePicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>GsParexelRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GsNewParexelGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>-- enter goal manually --</stringValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>SpecifyYourGoalValueStudyTeamGoal</name>
                    <dataType>Number</dataType>
                    <defaultValue>
                        <elementReference>SpecifyYourGoalValueStudyTeamGoal</elementReference>
                    </defaultValue>
                    <fieldText>Specify your goal value (0-100)</fieldText>
                    <fieldType>InputField</fieldType>
                    <isRequired>true</isRequired>
                    <scale>0</scale>
                    <validationRule>
                        <errorMessage>&lt;p&gt;The value must be between 0 and 100&lt;/p&gt;</errorMessage>
                        <formulaExpression>{!IsValidPercentValue}</formulaExpression>
                    </validationRule>
                    <visibilityRule>
                        <conditionLogic>((1 OR 2 OR 3) AND 4)</conditionLogic>
                        <conditions>
                            <leftValueReference>newStudyTeamGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>Achieve [value]% RTE</stringValue>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>newStudyTeamGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>Achieve [value]% subject cleaned</stringValue>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>newStudyTeamGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>Randomize [value]% subjects</stringValue>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GoalTypePicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>studyTeamGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>GsSpecifyYourGoalValueLabcorpGoal</name>
                    <dataType>Number</dataType>
                    <defaultValue>
                        <elementReference>GsSpecifyYourGoalValueLabcorpGoal</elementReference>
                    </defaultValue>
                    <fieldText>Specify your goal value (0-100)</fieldText>
                    <fieldType>InputField</fieldType>
                    <isRequired>true</isRequired>
                    <scale>0</scale>
                    <validationRule>
                        <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;The value must be between 0 and 100&lt;/span&gt;&lt;/p&gt;</errorMessage>
                        <formulaExpression>AND({!GsSpecifyYourGoalValueLabcorpGoal} &gt;=0, {!GsSpecifyYourGoalValueLabcorpGoal} &lt;= 100)</formulaExpression>
                    </validationRule>
                    <visibilityRule>
                        <conditionLogic>(2 OR 3 OR 4) AND 1</conditionLogic>
                        <conditions>
                            <leftValueReference>GoalTypePicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>labCorpGoalRecorcTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>newLabCorpGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>Achieve [value]% RTE</stringValue>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>newLabCorpGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>Achieve [value]% subject cleaned</stringValue>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>newLabCorpGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>Randomize [value]% subjects</stringValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>GsSpecifyYourGoalValueCroGoal</name>
                    <dataType>Number</dataType>
                    <defaultValue>
                        <elementReference>GsSpecifyYourGoalValueCroGoal</elementReference>
                    </defaultValue>
                    <fieldText>Specify your goal value (0-100)</fieldText>
                    <fieldType>InputField</fieldType>
                    <isRequired>true</isRequired>
                    <scale>0</scale>
                    <validationRule>
                        <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;The value must be between 0 and 100&lt;/span&gt;&lt;/p&gt;</errorMessage>
                        <formulaExpression>AND({!GsSpecifyYourGoalValueCroGoal} &gt;=0, {!GsSpecifyYourGoalValueCroGoal} &lt;= 100)</formulaExpression>
                    </validationRule>
                    <visibilityRule>
                        <conditionLogic>(2 OR 3 OR 4) AND 1</conditionLogic>
                        <conditions>
                            <leftValueReference>GoalTypePicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>GsCroGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GsNewCroGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>Achieve [value]% RTE</stringValue>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GsNewCroGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>Achieve [value]% subject cleaned</stringValue>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GsNewCroGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>Randomize [value]% subjects</stringValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>GsSpecifyYourGoalValueParexelGoal</name>
                    <dataType>Number</dataType>
                    <defaultValue>
                        <elementReference>GsSpecifyYourGoalValueParexelGoal</elementReference>
                    </defaultValue>
                    <fieldText>Specify your goal value (0-100)</fieldText>
                    <fieldType>InputField</fieldType>
                    <isRequired>true</isRequired>
                    <scale>0</scale>
                    <validationRule>
                        <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;The value must be between 0 and 100&lt;/span&gt;&lt;/p&gt;</errorMessage>
                        <formulaExpression>AND({!GsSpecifyYourGoalValueParexelGoal} &gt;=0, {!GsSpecifyYourGoalValueParexelGoal} &lt;= 100)</formulaExpression>
                    </validationRule>
                    <visibilityRule>
                        <conditionLogic>1 AND (2 OR 3 OR 4)</conditionLogic>
                        <conditions>
                            <leftValueReference>GoalTypePicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>GsParexelRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GsNewParexelGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>Achieve [value]% RTE</stringValue>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GsNewParexelGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>Achieve [value]% subject cleaned</stringValue>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GsNewParexelGoal.GsStandardGoal__c</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>Randomize [value]% subjects</stringValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <isRequired>false</isRequired>
                    <objectFieldReference>varGoalRecord.GsKeyGoal__c</objectFieldReference>
                    <visibilityRule>
                        <conditionLogic>or</conditionLogic>
                        <conditions>
                            <leftValueReference>GoalTypePicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>clinicalTeamRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GoalTypePicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>studyTeamGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GoalTypePicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>GsCroGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <isRequired>false</isRequired>
                    <objectFieldReference>varGoalRecord.GsFinalCosmosDelivery__c</objectFieldReference>
                    <visibilityRule>
                        <conditionLogic>or</conditionLogic>
                        <conditions>
                            <leftValueReference>GoalTypePicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>labCorpGoalRecorcTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GoalTypePicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>GsParexelRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>CreateGoalRecord_Section1_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>StudyTeamStudyNumber</name>
                    <choiceReferences>StudyNumberChoiceList</choiceReferences>
                    <dataType>String</dataType>
                    <defaultValue>
                        <elementReference>StudyNumberChoiceList</elementReference>
                    </defaultValue>
                    <fieldText>Study Number</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <isRequired>true</isRequired>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>GoalTypePicklist</leftValueReference>
                            <operator>NotEqualTo</operator>
                            <rightValue>
                                <elementReference>clinicalTeamRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GoalTypePicklist</leftValueReference>
                            <operator>IsNull</operator>
                            <rightValue>
                                <booleanValue>false</booleanValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>ClinicalTeamStudyNumber</name>
                    <choiceReferences>ProjectStudyNumberChoiceSet</choiceReferences>
                    <choiceReferences>GeneralProjectChoice</choiceReferences>
                    <dataType>String</dataType>
                    <defaultValue>
                        <elementReference>ClinicalTeamStudyNumber</elementReference>
                    </defaultValue>
                    <fieldText>Study Number</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <isRequired>true</isRequired>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>GoalTypePicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>clinicalTeamRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>ClinicalTeamProjectNumber</name>
                    <choiceReferences>ProjectChoiceSet</choiceReferences>
                    <dataType>String</dataType>
                    <fieldText>Project Number</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <isRequired>true</isRequired>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>ClinicalTeamStudyNumber</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>GeneralProjectChoice</elementReference>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>TargetMonthCustomPicklist</name>
                    <choiceReferences>TargetMonthChoiceSet</choiceReferences>
                    <dataType>String</dataType>
                    <defaultValue>
                        <elementReference>TargetMonthChoiceSet</elementReference>
                    </defaultValue>
                    <fieldText>Target Month</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <isRequired>true</isRequired>
                    <visibilityRule>
                        <conditionLogic>or</conditionLogic>
                        <conditions>
                            <leftValueReference>GoalTypePicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>clinicalTeamRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GoalTypePicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>studyTeamGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GoalTypePicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>GsCroGoalRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>GsTargetDate</name>
                    <dataType>Date</dataType>
                    <defaultValue>
                        <elementReference>GsTargetDate</elementReference>
                    </defaultValue>
                    <fieldText>Target Date</fieldText>
                    <fieldType>InputField</fieldType>
                    <isRequired>true</isRequired>
                    <visibilityRule>
                        <conditionLogic>or</conditionLogic>
                        <conditions>
                            <leftValueReference>GoalTypePicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>labCorpGoalRecorcTypeId</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>GoalTypePicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>GsParexelRecordTypeId</elementReference>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>StatusCustomPicklist</name>
                    <choiceReferences>StatusPicklistChoiceSet</choiceReferences>
                    <dataType>String</dataType>
                    <defaultValue>
                        <elementReference>StatusPicklistChoiceSet</elementReference>
                    </defaultValue>
                    <fieldText>Status</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <name>AchievedDatePicklist</name>
                    <dataType>Date</dataType>
                    <defaultValue>
                        <elementReference>AchievedDatePicklist</elementReference>
                    </defaultValue>
                    <fieldText>Achieved Date</fieldText>
                    <fieldType>InputField</fieldType>
                    <isRequired>true</isRequired>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>StatusCustomPicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>Achieved</stringValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>ApprovedByPicklist</name>
                    <choiceReferences>ApprovedByPicklistChoiceSet</choiceReferences>
                    <dataType>String</dataType>
                    <defaultValue>
                        <elementReference>ApprovedByPicklistChoiceSet</elementReference>
                    </defaultValue>
                    <fieldText>Approved By</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <isRequired>true</isRequired>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>GoalPeriodPicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <booleanValue>true</booleanValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <fields>
            <name>CommentsSection</name>
            <fieldText>Comments</fieldText>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>CommentsSection_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>CommentsLongTextArea</name>
                    <fieldText>Comments</fieldText>
                    <fieldType>LargeTextArea</fieldType>
                    <isRequired>false</isRequired>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>CommentsSection_Column2</name>
                <fieldType>Region</fieldType>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithHeader</regionContainerType>
        </fields>
        <fields>
            <name>AdminSection</name>
            <fieldText>Admin Section</fieldText>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>AdminSection_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <isRequired>false</isRequired>
                    <objectFieldReference>varGoalRecord.GsFinalDate__c</objectFieldReference>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>AdminSection_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <isRequired>false</isRequired>
                    <objectFieldReference>varGoalRecord.GsCreatedAfterFreeze__c</objectFieldReference>
                </fields>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <isRequired>false</isRequired>
                    <objectFieldReference>varGoalRecord.GsAchievedDate__c</objectFieldReference>
                </fields>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <isRequired>false</isRequired>
                    <objectFieldReference>varGoalRecord.GsFinal__c</objectFieldReference>
                </fields>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <isRequired>false</isRequired>
                    <objectFieldReference>varGoalRecord.GsWithdrawn__c</objectFieldReference>
                </fields>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <isRequired>false</isRequired>
                    <objectFieldReference>varGoalRecord.GsRevised__c</objectFieldReference>
                </fields>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <isRequired>false</isRequired>
                    <objectFieldReference>varGoalRecord.GsTargetDate__c</objectFieldReference>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithHeader</regionContainerType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>varGoalRecord.Id</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>1</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <nextOrFinishButtonLabel>Create Goal</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>ErrorWhileCreatingNewGoal</name>
        <label>Error while creating New Goal</label>
        <locationX>1138</locationX>
        <locationY>398</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>ErrorText</name>
            <fieldText>&lt;p&gt;We were unfortunatetly unable to create a new goal. Please try again later.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Error cause: {!ImpactErrorText}&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <nextOrFinishButtonLabel>Exit</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Goal_Already_Exists_Screen</name>
        <label>Goal Already Exists Screen</label>
        <locationX>662</locationX>
        <locationY>2438</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>CreateGoalRecord</targetReference>
        </connector>
        <fields>
            <name>alreadyExistsMessage</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;A goal with the same title already exists for the selected program, project and study in this period.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>708</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Impact_Information</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <description>Gets all study / program identifiers from impact</description>
        <name>Get_Impact_Information</name>
        <label>Get Impact Information</label>
        <locationX>834</locationX>
        <locationY>158</locationY>
        <connector>
            <targetReference>ImpactCallsucessfulDecision</targetReference>
        </connector>
        <flowName>GoalSetter_Get_Impact_Studies</flowName>
        <outputAssignments>
            <assignToReference>ImpactErrorText</assignToReference>
            <name>ImpactErrorText</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>ImpactProjectList</assignToReference>
            <name>ProjectList</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>ImpactStudyList</assignToReference>
            <name>StudyList</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>ImpactCallSucessful</assignToReference>
            <name>Succesful</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>UniqueProjectList</assignToReference>
            <name>UniqueProjectList</name>
        </outputAssignments>
    </subflows>
    <subflows>
        <name>GsInitDefaultGoalTypes</name>
        <label>Init Default Goal Types</label>
        <locationX>530</locationX>
        <locationY>398</locationY>
        <connector>
            <targetReference>CreateGoalRecord</targetReference>
        </connector>
        <flowName>GsGoalSetterInitRecordTypeGoals</flowName>
        <outputAssignments>
            <assignToReference>newClinicalTeamGoal</assignToReference>
            <name>GsDefaultClinicalTeamGoal</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>GsNewCroGoal</assignToReference>
            <name>GsDefaultCroGoal</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>newLabCorpGoal</assignToReference>
            <name>GsDefaultLabCorpGoal</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>GsNewParexelGoal</assignToReference>
            <name>GsDefaultParexelGoal</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>newStudyTeamGoal</assignToReference>
            <name>GsDefaultStudyTeamGoal</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>clinicalTeamRecordTypeId</assignToReference>
            <name>GsVarClinicalTeamGoalRecordTypeId</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>GsVarCountryRecruitmentGoalRecordTypeId</assignToReference>
            <name>GsVarCountryRecruitmentGoalRecordTypeId</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>GsVarCovanceGoalRecordTypeId</assignToReference>
            <name>GsVarCovanceGoalRecordTypeId</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>GsCroGoalRecordTypeId</assignToReference>
            <name>GsVarCroRecordTypeId</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>labCorpGoalRecorcTypeId</assignToReference>
            <name>GsVarLabCorpRecordTypeId</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>GsParexelRecordTypeId</assignToReference>
            <name>GsVarParexelRecordTypeId</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>studyTeamGoalRecordTypeId</assignToReference>
            <name>GsVarStudyTeamGoalRecordTypeId</name>
        </outputAssignments>
    </subflows>
    <variables>
        <name>clinicalTeamRecordTypeId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>currentItem_FilterMatchingStudy</name>
        <apexClass>ExternalService__IMPACTv3_ShortStudy</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>GsCroGoalRecordTypeId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>GsNewCroGoal</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>GsGoal__c</objectType>
    </variables>
    <variables>
        <name>GsNewParexelGoal</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>GsGoal__c</objectType>
    </variables>
    <variables>
        <name>GsParexelRecordTypeId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>GsVarCountryRecruitmentGoalRecordTypeId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>GsVarCovanceGoalRecordTypeId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>GsVarGeneralProjectChoiceLabel</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>General</stringValue>
        </value>
    </variables>
    <variables>
        <description>An indicator wether the Impact Call was succesful</description>
        <name>ImpactCallSucessful</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>The error the IMPACT threw as a human readble description.</description>
        <name>ImpactErrorText</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Unknown Impact Error</stringValue>
        </value>
    </variables>
    <variables>
        <description>A list of unique Impact Projects</description>
        <name>ImpactProjectList</name>
        <apexClass>ExternalService__IMPACTv3_ShortStudy</apexClass>
        <dataType>Apex</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>List with all studies from Impact</description>
        <name>ImpactStudyList</name>
        <apexClass>ExternalService__IMPACTv3_ShortStudy</apexClass>
        <dataType>Apex</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>labCorpGoalRecorcTypeId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>newClinicalTeamGoal</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>GsGoal__c</objectType>
    </variables>
    <variables>
        <name>newLabCorpGoal</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>GsGoal__c</objectType>
    </variables>
    <variables>
        <name>newStudyTeamGoal</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>GsGoal__c</objectType>
    </variables>
    <variables>
        <description>The user selected Impact Study</description>
        <name>SelectedImpactStudy</name>
        <apexClass>ExternalService__IMPACTv3_ShortStudy</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>studyTeamGoalRecordTypeId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>A list of unique projects</description>
        <name>UniqueProjectList</name>
        <apexClass>ExternalService__IMPACTv3_ShortStudy</apexClass>
        <dataType>Apex</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Flow to create a new Goal record</description>
        <name>varGoalRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>GsGoal__c</objectType>
    </variables>
</Flow>
